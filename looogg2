pal@pal-desktop79:/media/pal/E/GnomeApp/totem-gstbt/install/bin$ gdb ./totem 
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./totem...
(gdb) r
Starting program: /media/pal/E/GnomeApp/totem-gstbt/install/bin/totem 

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) 
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgobject-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libglib-2.0.so.0
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgdk-3.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libpeas-1.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgmodule-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libbrotlidec.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libbrotlicommon.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcap.so.2
(totem_object_class_init) 
(totem-object/totem_object_init) 
[New Thread 0x7ffff53c96c0 (LWP 25981)]
[New Thread 0x7ffff4bc86c0 (LWP 25982)]
[New Thread 0x7fffeffff6c0 (LWP 25983)]
[New Thread 0x7fffef7fe6c0 (LWP 25984)]
[Detaching after fork from child process 25985]
GST::gst_soup_http_src_uri_handler_init 
(gst_bt_demux_class_init) 
(totem_object_app_handle_local_options) 
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/gio/modules/libgvfsdbus.so
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/gvfs/libgvfscommon.so
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcanberra.so.0
NOT g_application_get_is_remote 
(totem-object/totem_object_app_activate)
(totem_player_toolbar_class_init) 
bacon_video_widget_class_init 
(bacon_video_widget_init) 
(gst_bt_demux_class_init) 
(bt_demux_init) 
(gst_bt_demux_init) add sink pad to element
[New Thread 0x7fffedfff6c0 (LWP 25990)]
[New Thread 0x7fffed7fe6c0 (LWP 25991)]
(gstdecodebin2)add static sink pad
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libnss_mdns4_minimal.so.2
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtinfo.so.6
GTK-GLSINK:: gst_gtk_gl_sink_init 
GL-SINKBIN::gst_gl_sink_bin_init 
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
GL-SINKBIN::gst_gl_sink_bin_set_sink 
[New Thread 0x7fffec9ff6c0 (LWP 25992)]
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
bacon_time_label_class_init 
(bitfield_scale_init) 
[New Thread 0x7fffe0fff6c0 (LWP 25993)]
(totem_setup_window) 
(totem-object/video_widget_create) 
[New Thread 0x7fffd61ff6c0 (LWP 25994)]
[New Thread 0x7fffd59fe6c0 (LWP 25995)]
[New Thread 0x7fffd51fd6c0 (LWP 25996)]
[New Thread 0x7fffd49fc6c0 (LWP 25997)]
[New Thread 0x7fffc3fff6c0 (LWP 25998)]
[New Thread 0x7fffc37fe6c0 (LWP 25999)]
(totem_callback_connect) 
(bacon_video_widget_get_volume)
[New Thread 0x7fffc2ffd6c0 (LWP 26000)]
[New Thread 0x7fffc27fc6c0 (LWP 26001)]
[New Thread 0x7fffc1ffb6c0 (LWP 26002)]
(bvw/set_audio_filter) caps is NULL 
IN totem_plugins_engine_get_default ,path[]=/home/pal/.local/share/totem/plugins
IN totem_plugins_engine_get_default ,path[]=/media/pal/E/GnomeApp/totem-gstbt/install/lib/x86_64-linux-gnu/totem/plugins
plugin loading:TOTEM_TYPE_VARIABLE_RATE_PLUGIN
plugin loading:TOTEM_TYPE_MOVIE_PROPERTIES_PLUGIN
In totem-movie-properties.c impl_activeate 
plugin loading:TOTEM_TYPE_SCREENSAVER_PLUGIN
plugin loading:TOTEM_TYPE_ROTATION_PLUGIN
plugin loading:TOTEM_TYPE_OPEN_DIRECTORY_PLUGIN
OPEN-DIRECTORY: impl_activate
 (totem_object_plugins_init) 
(totem_object_app_activate) set fileidx as -1 to start pipeline but not playing yet 
(totem_object_set_fileidx), file_idx=-1 
(bacon_video_widget_open) initial case: fileidx is -1 ,progressively SET bvw->pipeline state to READY and then PAUSED
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libpulse.so.0
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon-16.1.so
[New Thread 0x7fffc16196c0 (LWP 26003)]
[Thread 0x7fffc16196c0 (LWP 26003) exited]
[New Thread 0x7fffc16196c0 (LWP 26004)]
[New Thread 0x7fffc0e186c0 (LWP 26005)]
[New Thread 0x7fffabfff6c0 (LWP 26006)]
[New Thread 0x7fffab7fe6c0 (LWP 26007)]
(gstdecodebin2) state changed from READY to PAUSED 
(gstTYPEFIND) start_typefinding 
(bt_demux_change_state) READY_TO_PAUSED GstTaskState is:(1)
(bt_demux_task_setup) setting up task......
[New Thread 0x7fffaaffd6c0 (LWP 26008)]
[New Thread 0x7fffaa7fc6c0 (LWP 26009)]
(bt_demux_sink_event) 
(bt_demux_sink_event) Not EOS, skip and return
(bt_demux_sink_event) 
(bt_demux_sink_event) Not EOS, skip and return
(bt_demux_sink_event) 
(gst_bt_demux_sink_event) atp.save_path = /home/pal/Documents 
Got add_torrent_alert 
Start download, num files: 2, num pieces: 2034, piece length: 1048576 
(gst_bt_demux_sink_event) libtorrent async_add_torrent called 
[New Thread 0x7fffa9ffb6c0 (LWP 26010)]
gst_bt_demux_stream_class_init 
gst_bt_demux_stream_init 
(gst_bt_demux_handle_alert) create src pad src_00 (aka.BtDemuxStream) 
(bt_demux_handle_alert) Adding stream src_00 for file Singnapore/2025-02-22_18-58-36.mp4 at fileidx 0, start_piece:0, start_ofset:0,end_piece:905,end_ofset:771995 (0,949733275]
gst_bt_demux_stream_init 
(gst_bt_demux_handle_alert) create src pad src_01 (aka.BtDemuxStream) 
(bt_demux_handle_alert) Adding stream src_01 for file Singnapore/HotSopt.mp4 at fileidx 1, start_piece:905, start_ofset:771995,end_piece:2033,end_ofset:54374 (949733275,2131809382]
Got torrent_checked_alert
(We are not seeder) 
(bvw_bus_message_cb) bvw-pipeline changed state from NULL to READY
(bvw_bus_message_cb) disable updating slider and time label
(bvw_query_timeout) could not get position
(bvw_handle_application_message) entering 
(bvw_handle_application_message) Initially start-ppi 
(bvw_reconfigure_ppi_timeout) adding ppi timeout (at 1000ms)
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(bvw_handle_application_message) entering 
(totem_got_piece_block_info) entering 
(bitfield_scale_set_piece_block_info) 130116,2034,64,4
(free_piece_block_info_sd) called 
(IN bvw_handle_element_message_async) 
(bvw_handle_element_message) src_name is:btdemux,type_name is:btdemux-video-info  
(bvw) fname is Singnapore/2025-02-22_18-58-36.mp4
(bvw) fpath is /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4
(btdemux-video-info) Key: 0, FileName: Singnapore/2025-02-22_18-58-36.mp4, FullPath: /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4
(bvw) fname is Singnapore/HotSopt.mp4
(bvw) fpath is /home/pal/Documents/Singnapore/HotSopt.mp4
(btdemux-video-info) Key: 1, FileName: Singnapore/HotSopt.mp4, FullPath: /home/pal/Documents/Singnapore/HotSopt.mp4
(bacon_video_widget_retrieve_btdemux_video_info) Got it 
(totem_got_torrent_videos_info) Loop item, Fidx: 0, FileName: Singnapore/2025-02-22_18-58-36.mp4, FullPath: /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4
(totem_playlist_add_one_row_impl) 0 Singnapore/2025-02-22_18-58-36.mp4 /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4
(totem_got_torrent_videos_info) Loop item, Fidx: 1, FileName: Singnapore/HotSopt.mp4, FullPath: /home/pal/Documents/Singnapore/HotSopt.mp4
(totem_playlist_add_one_row_impl) 1 Singnapore/HotSopt.mp4 /home/pal/Documents/Singnapore/HotSopt.mp4
(totem_got_torrent_videos_info) probe: len of playlist is 2
(totem_object_set_current_fileidx_and_play) get current fileidx 0 from totem-playlist 
totem_object_set_fileidx_and_play, file_index=0 
(totem_object_set_fileidx), file_idx=0 
(totem_object_set_fileidx), file_idx=0  gonna call bacon_video_widget_open
(bacon_video_widget_open) set cur_video_fileidx_within_tor to 0
(btdemux/update_requested_stream) desired fileidx 0 
(update_requested_stream) Mark stream of fileidx 0 as Requested 
(bt_demux_stream_activate) waiting lock
(bt_demux_stream_activate) recovery lock
(bt_demux_stream_activate) Modifying thiz->current_piece to -1 (start_piece minus one) 
(bt_demux_stream_activate) clearing historical cur_buffering_flags for activate stream
(bt_demux_stream_activate) Activating stream 'src_00', start: (0), start_offset: 0, end: 905, end_offset: 771995, current: (-1) buffering(Yes)
(bt_demux_stream_activate) unlock
(gst_bt_demux_switch_streams) Switching to stream 'src_00', reading piece 0, current: -1, buffering(Yes)
(gst_bt_demux_send_buffering) waiting lock (-1)
(gst_bt_demux_send_buffering) recovery lock (-1)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:-1
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(btdemux/update_requested_stream) stream-idx(1) disable undesired streams(src pads)
(btdemux/update_requested_stream) stream-idx(1) DISABLE gst_pad_set_active ok
(bacon_video_widget_open) reset seekable back to unknown state (which is -1)
mark_popup_busy 0x555555571c80, opening file
(totem_playlist_get_current_full_path) /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4 
In totem_movie_properties_plugin_fileidx_opened 
(totem_playlist_get_current_full_path) /home/pal/Documents/Singnapore/2025-02-22_18-58-36.mp4 
(totem_object_play) 
(bacon_video_widget_play) cur_state:READY
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
-unmark_popup_busy paused
(totem_got_torrent_videos_info) gotta free the GList* 
[New Thread 0x7fffa97fa6c0 (LWP 26011)]
(bvw_handle_buffering_message) Buffering... temporarily pausing playback 0% and SET bvw->pipeline state to PAUSED
[Thread 0x7fffc2ffd6c0 (LWP 26000) exited]
[Thread 0x7fffc1ffb6c0 (LWP 26002) exited]
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, but ppi is empty 
[New Thread 0x7fffc1ffb6c0 (LWP 26018)]
[New Thread 0x7fffc2ffd6c0 (LWP 26021)]
[New Thread 0x7fff93fff6c0 (LWP 26022)]
[New Thread 0x7fff937fe6c0 (LWP 26023)]
Piece 1 completed (down: 0 kb/s, up: 0 kb/s, peers: 1, prio:7) 
 Piece 1 set bit at (0,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [0,2] buffered:1, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 33 (1/3) 
(gst_bt_demux_send_buffering) waiting lock (-1)
(gst_bt_demux_send_buffering) recovery lock (-1)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:-1
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering... temporarily pausing playback 33% and SET bvw->pipeline state to PAUSED
[New Thread 0x7fff92ffd6c0 (LWP 26024)]
[New Thread 0x7fff927fc6c0 (LWP 26025)]
Piece 2 completed (down: 0 kb/s, up: 0 kb/s, peers: 1, prio:7) 
 Piece 2 set bit at (0,2)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [0,2] buffered:2, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 66 (2/3) 
(gst_bt_demux_send_buffering) waiting lock (-1)
(gst_bt_demux_send_buffering) recovery lock (-1)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:-1
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering... temporarily pausing playback 66% and SET bvw->pipeline state to PAUSED
[New Thread 0x7fff91ffb6c0 (LWP 26027)]
[New Thread 0x7fff917fa6c0 (LWP 26030)]
Piece 0 completed (down: 0 kb/s, up: 0 kb/s, peers: 1, prio:7) 
 Piece 0 set bit at (0,0)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [0,2] buffered:3, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 100 (3/3) 
(gst_bt_demux_send_buffering) waiting lock (-1)
(gst_bt_demux_send_buffering) recovery lock (-1)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 0, current:-1
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering done, call bacon_video_widget_play on it
(bacon_video_widget_play) cur_state:READY
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
[New Thread 0x7fff90ff96c0 (LWP 26032)]
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(0)
(bt_demux_handle_alert) stream-idx(0) Create the pad if needed and add the pad to element (0)
(bt_demux_handle_alert) stream-idx(0) ENABLE gst_pad_set_active ok
(on_btdemux_pad_added) btdemux src pad added: src_00
(on_btdemux_pad_added) Successfully linked btdemux src pad (src_00) to decodebin sink pad 
(on_btdemux_pad_added) gst_pad_is_active (pad) is 1 
(on_btdemux_pad_added) Stream-start event pushed on pad 'src_00'
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(0), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 0 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_check_no_more_pads) We're done... Sending no more pads 
(on_btdemux_no_more_pads) on no more pads: src_00
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(0)
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:0, end piece idx:905],current_piece:-1,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type not emitted yet
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(-1), ipc_data->piece(0)
(bt_demux_stream_push_loop) recovery lock (-1)
(gst_bt_demux_buffer_new) thiz->start_piece=0, piece=0, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (0) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=0, end_byte=949733275 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from -1 to 0 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (0) 
(gstTYPEFIND) gst_type_find_element_emit_have_type 
GST-DECODEBIN::type_found, it is video/quicktime 
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
(qtdemux_init) 
(qtdemux_sink_activate) activating push 
(qtdemux_handle_sink_event) GST_EVENT_STREAM_START 
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_handle_sink_event) GST_EVENT_STREAM_START 
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_chain) Received buffer size:1048576 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c000c70,neededbytes:16,available: 1048576
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(gst_qtdemux_check_seekability) seekable:1, start:0 stop:949733275
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [ftyp] size:32
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=32
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is ftyp
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=18446744073709551615
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset+=demux->neededbytes(32) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [free] size:8
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=8
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is free
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=18446744073709551615
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset+=demux->neededbytes(8) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [mdat] size:949157796
(qtdemux_process_adapter) FOURCC_mdat. no headers yet, try to get them
(qtdemux_seek_offset) Seeking to 949157836
(bt_demux_stream_event) Got Event, GST_EVENT_SEEK 
(bt_demux_stream_seek) info 0,0 905,771995 
(bt_demux_stream_seek) moov_after_mdat, this Seek event is posted by qtdemux 
(bt_demux_stream_seek) rate:1.000000, start:949157836, stop:949733275 
(bt_demux_stream_seek) push flush_start 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_START 
(bt_demux_stream_seek) waiting lock (0)
(bt_demux_stream_seek) recovery lock (0)
(bt_demux_stream_seek) fileidx(0) start_byte_global = 0
(bt_demux_stream_seek) Seeking to, start:905, start_offset:196556, end:905, end_offset:771995, start_byte949157836,end_byte949733275 
(bt_demux_stream_seek) before activate, clear previous Three-Piece-Area [1,3]
(bt_demux_stream_activate) waiting lock
(bt_demux_stream_activate) recovery lock
(bt_demux_stream_activate) Modifying thiz->current_piece to 904 (start_piece minus one) 
(bt_demux_stream_activate) clearing historical cur_buffering_flags for activate stream
(bt_demux_stream_activate) Activating stream 'src_00', start: (905), start_offset: 196556, end: 905, end_offset: 771995, current: (904) buffering(Yes)
(bt_demux_stream_activate) unlock
(bt_demux_stream_seek) Starting SEEK stream 'src_00' go update buffering, start:905, current:904, buffering(Yes) 
(gst_bt_demux_stream_update_buffering) between [905,905] buffered:0, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 0 (0/1) 
(bt_demux_stream_seek) return FALSE to deliberately let qtdemux_seek_offset failed 
(bt_demux_stream_seek) unlock lock (0)
(gst_bt_demux_send_buffering) waiting lock (904)
(gst_bt_demux_send_buffering) recovery lock (904)
(bvw_handle_buffering_message) Buffering... temporarily pausing playback 0% and SET bvw->pipeline state to PAUSED
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:904
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(qtdemux_process_adapter) seek failed/skipped : 40
(qtdemux_process_adapter) although moov header not found in first 10MB, dont give up
(qtdemux_process_adapter) Clear data in adapter, demux->mdatoffset=40
(bt_demux_stream_push_loop) current_piece modified, give up call read_piece() on next piece 1, current:904
(bt_demux_stream_push_loop) unlock cur:(904)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:905, end piece idx:905],current_piece:904,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(gst_bt_demux_get_ppi) empty, post one
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
(first ppi addr 0x555555d43070) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 3 completed (down: 521 kb/s, up: 16 kb/s, peers: 1, prio:1) 
 Piece 3 set bit at (0,3)
Piece 4 completed (down: 521 kb/s, up: 16 kb/s, peers: 1, prio:1) 
 Piece 4 set bit at (0,4)
Piece 5 completed (down: 521 kb/s, up: 16 kb/s, peers: 1, prio:1) 
 Piece 5 set bit at (0,5)
Piece 898 completed (down: 521 kb/s, up: 16 kb/s, peers: 1, prio:1) 
 Piece 898 set bit at (112,2)
(first ppi addr 0x555555d34a40) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 899 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 899 set bit at (112,3)
Piece 900 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 900 set bit at (112,4)
Piece 901 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 901 set bit at (112,5)
Piece 902 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 902 set bit at (112,6)
Piece 903 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 903 set bit at (112,7)
Piece 904 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:1) 
 Piece 904 set bit at (113,0)
Piece 905 completed (down: 1310 kb/s, up: 38 kb/s, peers: 1, prio:7) 
 Piece 905 set bit at (113,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [905,905] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (904)
(gst_bt_demux_send_buffering) recovery lock (904)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 905, current:904
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering done, call bacon_video_widget_play on it
(bacon_video_widget_play) cur_state:READY
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(905)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(905), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 905 
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(905)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(904), ipc_data->piece(905)
(bt_demux_stream_push_loop) recovery lock (904)
(gst_bt_demux_buffer_new) thiz->start_piece=905, piece=905, this buffer actual size:575439 
(bt_demux_stream_push_loop) Received piece (905) of size 1048576 and actual size 575439 on file 0 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=949157836, end_byte=949733275 
(bt_demux_stream_push_loop) since flush_start sent, send flush_stop then 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_STOP 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 904 to 905 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 575439, file: 0, cur piece: (905) 
(qtdemux_chain) Received buffer size:575439 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c000c70,neededbytes:16,available: 575439
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [moov] size:575439
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=575439
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is moov
(qtdemux_process_adapter) Parsing [moov] 
(qtdemux_process_adapter) demux->last_moov_offset= 0
(qtdemux_parse_moov)parsing moov atom!!! 
(qtdemux_parse_tree) we have read the complete moov node now at parse_tree 
(_create_stream), stream_id=3efe89ceb7f3618a94681ce7a1d4a898b5e1c7868873e1b7c95144f81b7da3d5/00/001 
(qtdemux_stbl_init) [stsz] stream->sample_size=0, stream->n_samples=16866 
(qtdemux_stbl_init), [stsc] stream->n_samples_per_chunk=2 
(qtdemux_stbl_init) allocating n_samples 16866, (guint)sizeof(QtDemuxSample) is 32
(qtdemux_parse_segments) created segment 0 time 0:00:00.000000000, media_start (0:00:00.066666666), media_stop (0:09:22.266666666), duration 0:09:22.200000000, timescale 15360
(_create_stream), stream_id=3efe89ceb7f3618a94681ce7a1d4a898b5e1c7868873e1b7c95144f81b7da3d5/00/002 
(qtdemux_stbl_init) [stsz] stream->sample_size=0, stream->n_samples=26350 
(qtdemux_stbl_init), [stsc] stream->n_samples_per_chunk=14756 
(qtdemux_stbl_init) allocating n_samples 26350, (guint)sizeof(QtDemuxSample) is 32
(qtdemux_parse_segments) created segment 0 time 0:00:00.000000000, media_start (0:00:00.000000000), media_stop (0:09:22.134000000), duration 0:09:22.134000000, timescale 48000
(qtdemux_prepare_streams) num: 2 
(qtdemux_add_stream) adding pad video_0 
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
[New Thread 0x7fff87fff6c0 (LWP 26035)]
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_awb.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_kal.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_kal16.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_rms.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_slt.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libvpl.so.2
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libzvbi.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtheoraenc.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtheoradec.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libvdpau.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_usenglish.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmulex.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcjson.so.1
FFMPEG,GST-AVVIDEC:: gst_ffmpegviddec_set_format
[New Thread 0x7fff6cbff6c0 (LWP 26036)]
[New Thread 0x7fff63fff6c0 (LWP 26037)]
[New Thread 0x7fff637fe6c0 (LWP 26038)]
[New Thread 0x7fff62ffd6c0 (LWP 26039)]
(qtdemux_add_stream) adding pad audio_0 
(ghostpad_pad_constructed) GST_PAD_UNSET_FLUSHING
[New Thread 0x7fff627fc6c0 (LWP 26040)]
(gst_qtdemux_map_and_push_segments) 
(qtdemux_activate_segment) (video_0) activate segment 0, offset 0:00:00.000000000
(stream_segment_get_boundaries) (video_0) seg_time = 0:00:00.000000000 
(stream_segment_get_boundaries) (video_0) result is start=0:00:00.066666666,stop=0:09:22.266666666,time=0:00:00.000000000
(qtdemux_stream_update_segment) (video_0) new segment 0 from 0:00:00.066666666 to 0:09:22.266666666,time 0:00:00.000000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(qtdemux_activate_segment) (audio_0) activate segment 0, offset 0:00:00.000000000
(stream_segment_get_boundaries) (audio_0) seg_time = 0:00:00.000000000 
(stream_segment_get_boundaries) (audio_0) result is start=0:00:00.000000000,stop=0:09:22.134000000,time=0:00:00.000000000
(qtdemux_stream_update_segment) (audio_0) new segment 0 from 0:00:00.000000000 to 0:09:22.134000000,time 0:00:00.000000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(qtdemux_process_adapter) Finished parsing the header 
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(bt_demux_stream_push_loop) When got moov header after mdat , reset pushing start from first piece 
(bt_demux_stream_activate) waiting lock
(bt_demux_stream_activate) recovery lock
(bt_demux_stream_activate) Modifying thiz->current_piece to -1 (start_piece minus one) 
(bt_demux_stream_activate) clearing historical cur_buffering_flags for activate stream
(bt_demux_stream_activate) Activating stream 'src_00', start: (0), start_offset: 0, end: 905, end_offset: 771995, current: (-1) buffering(No)
(bt_demux_stream_activate) unlock
(bt_demux_stream_push_loop) When got moov header after mdat, call read_piece() on start piece 0
(bt_demux_stream_push_loop) unlock cur:(-1)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:0, end piece idx:905],current_piece:-1,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(0)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(0), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 0 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(0)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(-1), ipc_data->piece(0)
(bt_demux_stream_push_loop) recovery lock (-1)
(gst_bt_demux_buffer_new) thiz->start_piece=0, piece=0, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (0) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=0, end_byte=949733275 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from -1 to 0 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (0) 
(qtdemux_chain) Received buffer size:1048576 demux offset:40
(qtdemux_chain) pushing in inbuf 0x7fff8c000c70,neededbytes:16,available: 1048576
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [ftyp] size:32
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=32
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is ftyp
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [free] size:8
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=8
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is free
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [mdat] size:949157796
(qtdemux_process_adapter) FOURCC_mdat.  already got moov header
(qtdemux_process_adapter) FOURCC_mdat. we have the headers, start playback, state set to QTDEMUX_STATE_MOVIE, and set neededbytes to 89849
(qtdemux_drop_data) dropping 8 bytes 
(bvw/on_pad_added for decodebin) :src_0
decodebin's Video pad detected.
(bvw_stream_changed_cb) 
(caps_set) video decoder caps: fps_n: 30, fps_d: 1, width: 1920, height: 1080 
(bvw_update_stream_info) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw/on_pad_added for decodebin) :src_1
decodebin's Audio pad detected.
(bvw_stream_changed_cb) 
(caps_set) video decoder caps: fps_n: 30, fps_d: 1, width: 1920, height: 1080 
(bvw_update_stream_info) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
GTK-GLSINK::gst_gtk_gl_sink_event: stream-start 
GTK-GLSINK::gst_gtk_gl_sink_event: caps 
(bvw_update_tags) gain audio Tags: 0x7fff000017d0A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) gain audio Tags: 0x7fff8c0778a0A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
GTK-GLSINK::gst_gtk_gl_sink_event: segment 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) Pipeline sent audio tags update with no changes 
(bvw_update_tags) gain audio Tags: 0x7fff00003630A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
GTK-GLSINK::gst_gtk_gl_sink_event: tag 
GTK-GLSINK::gst_gtk_gl_sink_event: tag 
GTK-GLSINK::gst_gtk_gl_sink_event: tag 
[New Thread 0x7fff1e2f26c0 (LWP 26041)]
(bvw_bus_message_cb) bvw-pipeline changed state from READY to PAUSED
(bvw_bus_message_cb) disable updating slider and time label
(bacon_video_widget_update_and_get_seekable) seeking query says the stream is seekable 
(got_time_tick) From now on, (Initial) the stream become seekable 
(update_current_time) From now on, We get the stream_length, which is 562200 
(caps_set) video decoder caps: fps_n: 30, fps_d: 1, width: 1920, height: 1080 
(bvw_update_stream_info) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_bus_message_cb) In GST_MESSAGE_ASYNC_DONE case: Maybe starting deferred playback after seek
(bacon_video_widget_play) cur_state:PAUSED
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
(gst_bt_demux_change_state) GstTaskState is 0
(bvw_bus_message_cb) bvw-pipeline changed state from PAUSED to PLAYING
(bvw_bus_message_cb) resume updating slider and time label
(bvw_reconfigure_tick_timeout) adding tick timeout (at 200ms) 
(bvw_update_tags) gain video Tags: 0x7ffef8001060A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) Pipeline sent video tags update with no changes 
(bvw_update_tags) Pipeline sent video tags update with no changes 
(bvw_update_tags) gain audio Tags: 0x7fff00020560A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) gain audio Tags: 0x7fff000207e0A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) gain audio Tags: 0x7fff00004550A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) gain audio Tags: 0x7fff00003810A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(first ppi addr 0x555555d13ef0) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
(bvw_update_tags) gain audio Tags: 0x7fff0000a3f0A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
mark_popup_busy 0x555555571c80, seek started
(totem-object/seek_slider_changed_cb), pos is 0.739669 
(totem_object_seek) seek pos:0.739669 
(bacon_video_widget_seek) Seeking to 0.74% 0:06:55.842148760
(bacon_video_widget_seek_time) Seeking to 0:06:55.842000000 
(bacon_video_widget_seek_time) No pending seek, just do it 
(bacon_video_widget_seek_time_no_lock) SET bvw->pipeline state to PAUSED, cur_state:PLAYING
(gst_bt_demux_change_state) GstTaskState is 0
(bacon_video_widget_seek_time_no_lock) Call gst_element_seek on pipeline 
GST-DECODEBIN:: gst_decode_pad_event seek 
(bt_demux_stream_event) Got Event, GST_EVENT_SEEK 
(bt_demux_stream_seek) format is not GST_FORMAT_BYTES 
(qtdemux_do_push_seek) 
(qtdemux_adjust_seek) 
(qtdemux_find_segment) (video_0) find segment for 0:06:55.842000000, found 0 
(qtdemux_find_index_linear) convert media_time (0:06:55.908666666) to mov format, mov_time=6388358,timescale=15360 
(qtdemux_find_index_linear) (video_0) found sample index 12476 at 0:06:55.908666666 
(qtdemux_find_keyframe) find_keyframe, (video_0) index before index 12476 gave 12435 
(qtdemux_find_segment) (audio_0) find segment for 0:06:55.842000000, found 0 
(qtdemux_find_index_linear) convert media_time (0:06:55.842000000) to mov format, mov_time=19960416,timescale=48000 
(qtdemux_find_index_linear) (audio_0) found sample index 19492 at 0:06:55.842000000 
(qtdemux_find_keyframe) find_keyframe, (audio_0) index before index 19492 gave 19492 
(qtdemux_do_push_seek) corresponding BYTE position 764984535 
(qtdemux_do_push_seek) push BYTE seek event, cur_type:1, stop_type:0, cur:764984535. stop:-1 

(bt_demux_stream_event) Got Event, GST_EVENT_SEEK 
(bt_demux_stream_seek) info 0,0 905,771995 
(bt_demux_stream_seek) rate:1.000000, start:764984535, stop:949733275 
(bt_demux_stream_seek) push flush_start 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_START 
GTK-GLSINK::gst_gtk_gl_sink_event: flush-start 
(gst_pad_push_data) goto flushing 
(gst_pad_push_data) pushing, but pad was flushing
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (0) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Luckily we have next piece 1, call read_piece() on it, current:0
(bt_demux_stream_push_loop) unlock cur:(0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:0, end piece idx:905],current_piece:0,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_stream_seek) waiting lock (0)
(bt_demux_stream_seek) recovery lock (0)
(bt_demux_stream_seek) fileidx(0) start_byte_global = 0
(bt_demux_stream_seek) Seeking to, start:729, start_offset:572631, end:905, end_offset:771995, start_byte764984535,end_byte949733275 
(bt_demux_stream_seek) before activate, clear previous Three-Piece-Area [1,3]
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(1)
(bt_demux_stream_activate) waiting lock
(bt_demux_stream_activate) recovery lock
(bt_demux_stream_activate) Modifying thiz->current_piece to 728 (start_piece minus one) 
(bt_demux_stream_activate) clearing historical cur_buffering_flags for activate stream
(bt_demux_stream_activate) Activating stream 'src_00', start: (729), start_offset: 572631, end: 905, end_offset: 771995, current: (728) buffering(Yes)
(bt_demux_stream_activate) unlock
(bt_demux_stream_seek) Starting SEEK stream 'src_00' go update buffering, start:729, current:728, buffering(Yes) 
(gst_bt_demux_stream_update_buffering) between [729,731] buffered:0, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 0 (0/3) 
(bt_demux_stream_seek) unlock lock (0)
(gst_bt_demux_send_buffering) waiting lock (728)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(1)
(gst_bt_demux_send_buffering) recovery lock (728)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:728
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_bus_message_cb) bvw-pipeline changed state from PLAYING to PAUSED
(bvw_bus_message_cb) disable updating slider and time label
(bvw_reconfigure_tick_timeout) removing tick timeout 
(bvw_bus_message_cb) In GST_MESSAGE_ASYNC_DONE case: Maybe starting deferred playback after seek
(bacon_video_widget_play) cur_state:PAUSED
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
(bvw_handle_buffering_message) Buffering (already paused) ... 0%
-unmark_popup_busy seek started
Piece 6 completed (down: 2143 kb/s, up: 64 kb/s, peers: 1, prio:1) 
 Piece 6 set bit at (0,6)
Piece 7 completed (down: 2143 kb/s, up: 64 kb/s, peers: 1, prio:1) 
 Piece 7 set bit at (0,7)
Piece 8 completed (down: 2143 kb/s, up: 64 kb/s, peers: 1, prio:1) 
 Piece 8 set bit at (1,0)
Piece 9 completed (down: 2143 kb/s, up: 64 kb/s, peers: 1, prio:1) 
 Piece 9 set bit at (1,1)
(first ppi addr 0x555555d3de30) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
(first ppi addr 0x55555561f180) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 10 completed (down: 2454 kb/s, up: 72 kb/s, peers: 1, prio:1) 
 Piece 10 set bit at (1,2)
Piece 11 completed (down: 2454 kb/s, up: 72 kb/s, peers: 1, prio:1) 
 Piece 11 set bit at (1,3)
Piece 12 completed (down: 2454 kb/s, up: 72 kb/s, peers: 1, prio:1) 
 Piece 12 set bit at (1,4)
(first ppi addr 0x5555561ab3a0) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 13 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 13 set bit at (1,5)
Piece 14 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 14 set bit at (1,6)
Piece 724 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 724 set bit at (90,4)
Piece 725 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 725 set bit at (90,5)
Piece 726 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 726 set bit at (90,6)
Piece 727 completed (down: 2769 kb/s, up: 81 kb/s, peers: 1, prio:1) 
 Piece 727 set bit at (90,7)
(first ppi addr 0x55555617a3f0) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
(first ppi addr 0x55555608af30) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 728 completed (down: 2683 kb/s, up: 79 kb/s, peers: 1, prio:1) 
 Piece 728 set bit at (91,0)
Piece 729 completed (down: 2683 kb/s, up: 79 kb/s, peers: 1, prio:7) 
 Piece 729 set bit at (91,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [729,731] buffered:1, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 33 (1/3) 
(gst_bt_demux_send_buffering) waiting lock (728)
(gst_bt_demux_send_buffering) recovery lock (728)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:728
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering (already paused) ... 33%
Piece 730 completed (down: 2683 kb/s, up: 79 kb/s, peers: 1, prio:7) 
 Piece 730 set bit at (91,2)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [729,731] buffered:2, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 66 (2/3) 
(gst_bt_demux_send_buffering) waiting lock (728)
(gst_bt_demux_send_buffering) recovery lock (728)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:728
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering (already paused) ... 66%
Piece 731 completed (down: 2683 kb/s, up: 79 kb/s, peers: 1, prio:7) 
 Piece 731 set bit at (91,3)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [729,731] buffered:3, buffering:3
(gst_bt_demux_stream_update_buffering) Buffering level 100 (3/3) 
(gst_bt_demux_send_buffering) waiting lock (728)
(gst_bt_demux_send_buffering) recovery lock (728)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 729, current:728
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(729)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(729), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 729 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(728), ipc_data->piece(729)
(bt_demux_stream_push_loop) recovery lock (728)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=729, this buffer actual size:475945 
(bt_demux_stream_push_loop) Received piece (729) of size 1048576 and actual size 475945 on file 0 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=764984535, end_byte=949733275 
(bt_demux_stream_push_loop) since flush_start sent, send flush_stop then 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_STOP 
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(729)
(bvw_handle_buffering_message) Buffering done, call bacon_video_widget_play on it
(bacon_video_widget_play) cur_state:PAUSED
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
GTK-GLSINK::gst_gtk_gl_sink_event: flush-stop 
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(gst_qtdemux_map_and_push_segments) 
(qtdemux_activate_segment) (video_0) activate segment 0, offset 0:06:55.842000000
(stream_segment_get_boundaries) (video_0) seg_time = 0:06:55.842000000 
(stream_segment_get_boundaries) (video_0) result is start=0:06:55.908666666,stop=0:09:22.266666666,time=0:06:55.842000000
(qtdemux_stream_update_segment) (video_0) new segment 0 from 0:06:55.908666666 to 0:09:22.266666666,time 0:06:55.842000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(qtdemux_activate_segment) (audio_0) activate segment 0, offset 0:06:55.842000000
(stream_segment_get_boundaries) (audio_0) seg_time = 0:06:55.842000000 
(stream_segment_get_boundaries) (audio_0) result is start=0:06:55.842000000,stop=0:09:22.134000000,time=0:06:55.842000000
(qtdemux_stream_update_segment) (audio_0) new segment 0 from 0:06:55.842000000 to 0:09:22.134000000,time 0:06:55.842000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(gst_qtdemux_find_sample) 
(qtdemux_move_stream) (video_0) moving to sample 12435 of 16866 
(qtdemux_move_stream) (audio_0) moving to sample 19427 of 26350 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 728 to 729 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 475945, file: 0, cur piece: (729) 
(qtdemux_chain) Received buffer size:475945 demux offset:764984535
(qtdemux_chain) pushing in inbuf 0x7fff8c47b8f0,neededbytes:183474,available: 475945
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bt_demux_stream_push_loop) Luckily we have next piece 730, call read_piece() on it, current:729
(bt_demux_stream_push_loop) unlock cur:(729)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:729,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(730)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(730), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 730 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(730)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(729), ipc_data->piece(730)
(bt_demux_stream_push_loop) recovery lock (729)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=730, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (730) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 729 to 730 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (730) 
(qtdemux_chain) Received buffer size:1048576 demux offset:765407642
(qtdemux_chain) pushing in inbuf 0x7fff8c47b360,neededbytes:54699,available: 1101414
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bt_demux_stream_push_loop) Luckily we have next piece 731, call read_piece() on it, current:730
(bt_demux_stream_push_loop) unlock cur:(730)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:730,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(731)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(731), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 731 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(731)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(730), ipc_data->piece(731)
(bt_demux_stream_push_loop) recovery lock (730)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=731, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (731) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 730 to 731 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (731) 
(qtdemux_chain) Received buffer size:1048576 demux offset:766464652
(qtdemux_chain) pushing in inbuf 0x7fff8c47bc40,neededbytes:51633,available: 1092980
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bvw_update_tags) Pipeline sent audio tags update with no changes 
(bvw_update_tags) Pipeline sent audio tags update with no changes 
(bvw_update_tags) gain audio Tags: 0x7fff0001ed10A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) gain audio Tags: 0x7fff000017d0A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
GTK-GLSINK::gst_gtk_gl_sink_event: segment 
GTK-GLSINK::gst_gtk_gl_sink_event: tag 
GTK-GLSINK::gst_gtk_gl_sink_event: tag 
(bvw_update_tags) gain video Tags: 0x7ffef802e710A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(bvw_update_tags) Pipeline sent video tags update with no changes 
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [732,733] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(731)
(gst_bt_demux_send_buffering) waiting lock (731)
(gst_bt_demux_send_buffering) recovery lock (731)
(bvw_handle_buffering_message) Buffering (already paused) ... 0%
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:731
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:731,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(first ppi addr 0x555555f29da0) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 15 completed (down: 3016 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 15 set bit at (1,7)
Piece 16 completed (down: 3016 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 16 set bit at (2,0)
Piece 17 completed (down: 3016 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 17 set bit at (2,1)
(first ppi addr 0x5555561943a0) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 18 completed (down: 3222 kb/s, up: 95 kb/s, peers: 1, prio:1) 
 Piece 18 set bit at (2,2)
Piece 19 completed (down: 3222 kb/s, up: 95 kb/s, peers: 1, prio:1) 
 Piece 19 set bit at (2,3)
Piece 20 completed (down: 3222 kb/s, up: 95 kb/s, peers: 1, prio:1) 
 Piece 20 set bit at (2,4)
(first ppi addr 0x5555561aae00) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
Piece 21 completed (down: 3212 kb/s, up: 94 kb/s, peers: 1, prio:1) 
 Piece 21 set bit at (2,5)
Piece 22 completed (down: 3212 kb/s, up: 94 kb/s, peers: 1, prio:1) 
 Piece 22 set bit at (2,6)
Piece 732 completed (down: 2860 kb/s, up: 84 kb/s, peers: 1, prio:7) 
 Piece 732 set bit at (91,4)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [732,734] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (731)
(gst_bt_demux_send_buffering) recovery lock (731)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 732, current:731
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bvw_handle_buffering_message) Buffering done, call bacon_video_widget_play on it
(bacon_video_widget_play) cur_state:PAUSED
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(732)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(732), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 732 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(732)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(731), ipc_data->piece(732)
(bt_demux_stream_push_loop) recovery lock (731)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=732, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (732) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 731 to 732 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (732) 
(qtdemux_chain) Received buffer size:1048576 demux offset:767546983
(qtdemux_chain) pushing in inbuf 0x7fff8c044220,neededbytes:48167,available: 1059225
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bvw_bus_message_cb) In GST_MESSAGE_ASYNC_DONE case: Maybe starting deferred playback after seek
(bacon_video_widget_play) cur_state:PAUSED
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to PLAYING
(gst_bt_demux_change_state) GstTaskState is 0
(bvw_bus_message_cb) bvw-pipeline changed state from PAUSED to PLAYING
(bvw_bus_message_cb) resume updating slider and time label
(bvw_reconfigure_tick_timeout) adding tick timeout (at 200ms) 
Piece 733 completed (down: 2860 kb/s, up: 84 kb/s, peers: 1, prio:1) 
 Piece 733 set bit at (91,5)
Piece 734 completed (down: 2860 kb/s, up: 84 kb/s, peers: 1, prio:1) 
 Piece 734 set bit at (91,6)
Piece 735 completed (down: 2860 kb/s, up: 84 kb/s, peers: 1, prio:1) 
 Piece 735 set bit at (91,7)
Piece 736 completed (down: 2860 kb/s, up: 84 kb/s, peers: 1, prio:1) 
 Piece 736 set bit at (92,0)
(first ppi addr 0x555556232910) 
(totem_got_ppi_info) 
(bt_demux_handle_alert) got piece_info_alert, push ppi queue
(bt_demux_stream_push_loop) Luckily we have next piece 733, call read_piece() on it, current:732
(bt_demux_stream_push_loop) unlock cur:(732)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:732,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(733)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(733), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 733 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(733)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(732), ipc_data->piece(733)
(bt_demux_stream_push_loop) recovery lock (732)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=733, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (733) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 732 to 733 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (733) 
(qtdemux_chain) Received buffer size:1048576 demux offset:768582804
(qtdemux_chain) pushing in inbuf 0x7fff8c497db0,neededbytes:54038,available: 1071980
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bvw_update_tags) gain audio Tags: 0x7fff00002580A 
(bvw_update_tags) emit got-metadata 
(on_got_metadata_event) 
(totem_get_nice_name_for_stream) emit_metadata_updated 
(totem-object/on_playlist_change_name)  got title to update player header Singnapore/2025-02-22_18-58-36.mp4
(totem_object_seek_next) Press Next Chapter 
(totem_object_direction) switch to next item in playlist 
(totem_object_set_current_fileidx_and_play) get current fileidx 1 from totem-playlist 
totem_object_set_fileidx_and_play, file_index=1 
(totem_object_set_fileidx), file_idx=1 
(totem_object_set_fileidx, file_idx=1) Closing the current stream first 
(bvw_stop_play_pipeline) SET bvw->pipeline state to READY
(gst_bt_demux_change_state) GstTaskState is 0
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (733) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Luckily we have next piece 734, call read_piece() on it, current:733
(bt_demux_stream_push_loop) unlock cur:(733)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:733,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(gstdecodebin2) state changed from PAUSED to READY 
(caps_set) caps on video pad is empty 
(caps_set) caps on video pad is empty 
(caps_set) caps on video pad is empty 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(734)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(734), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 734 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(734)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(733), ipc_data->piece(734)
(bt_demux_stream_push_loop) recovery lock (733)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=734, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (734) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 733 to 734 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (734) 
(qtdemux_chain) Received buffer size:1048576 demux offset:769242972
(qtdemux_chain) pushing in inbuf 0x7fff8c47aa90,neededbytes:563,available: 1460388
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (734) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Luckily we have next piece 735, call read_piece() on it, current:734
(bt_demux_stream_push_loop) unlock cur:(734)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:734,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(735)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(735), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 735 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(735)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(734), ipc_data->piece(735)
(bt_demux_stream_push_loop) recovery lock (734)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=735, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (735) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 734 to 735 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (735) 
(qtdemux_chain) Received buffer size:1048576 demux offset:769243535
(qtdemux_chain) pushing in inbuf 0x7fff8c000c70,neededbytes:42593,available: 2508401
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (735) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Luckily we have next piece 736, call read_piece() on it, current:735
(bt_demux_stream_push_loop) unlock cur:(735)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:735,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(736)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(736), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 736 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(736)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(735), ipc_data->piece(736)
(bt_demux_stream_push_loop) recovery lock (735)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=736, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (736) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 735 to 736 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (736) 
(qtdemux_chain) Received buffer size:1048576 demux offset:769286128
(qtdemux_chain) pushing in inbuf 0x7fff8c497c00,neededbytes:540,available: 3514384
(gst_qtdemux_process_adapter) demux->state=<MOVIE> 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (736) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [737,738] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(736)
(gst_bt_demux_send_buffering) waiting lock (736)
(gst_bt_demux_send_buffering) recovery lock (736)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:736
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:736,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
[Thread 0x7fff6cbff6c0 (LWP 26036) exited]
[Thread 0x7fff63fff6c0 (LWP 26037) exited]
[Thread 0x7fff637fe6c0 (LWP 26038) exited]
[Thread 0x7fff62ffd6c0 (LWP 26039) exited]
(gst_qtdemux_stream_flush_samples_data) 
(decodebin2/pad_removed_cb) pad name is video_0
(gst_qtdemux_stream_flush_samples_data) 
(decodebin2/pad_removed_cb) pad name is audio_0
(gstdecodebin2) state changed from PAUSED to READY 2
(decodebin/chain_free_internal) pad type is video
(bvw/on_pad_removed for decodebin) :src_0, pad_type is video
(bvw/on_pad_removed) existed in video channels at 0
(bvw/on_pad_removed for decodebin)  glsinkbin sinkpad is not linked with any pad, no need to unlink 
Removed decodebin's Video pad from video_channels, len after remove is 0
(decodebin/chain_free_internal) pad type is audio
(bvw/on_pad_removed for decodebin) :src_1, pad_type is audio
(bvw/on_pad_removed) existed in audio channels at 0
(bvw/on_pad_removed for decodebin) audio_bin sinkpad is not linked with any pad, no need to unlink 
Removed decodebin's Audio pad from audio_channels, len after remove is 0
(decodebin/chain_free_internal) pad type is video
(decodebin/chain_free_internal) pad type is audio
(gst_bt_demux_change_state) GstTaskState is 0
(gst_bt_demux_change_state) PAUSED_TO_READY 
[Thread 0x7fff627fc6c0 (LWP 26040) exited]
[Thread 0x7fff87fff6c0 (LWP 26035) exited]
Piece 737 completed (down: 3447 kb/s, up: 100 kb/s, peers: 1, prio:7) 
 Piece 737 set bit at (92,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [737,739] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (736)
(gst_bt_demux_send_buffering) recovery lock (736)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 737, current:736
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(737)
(bt_demux_handle_alert) stream-idx(0) Create the pad if needed and add the pad to element (737)
(bt_demux_handle_alert) stream-idx(0) ENABLE gst_pad_set_active ok

(totem:25978): GStreamer-CRITICAL **: 05:29:30.678: Padname src_00 is not unique in element btdemux, not adding
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(737), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 737 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_check_no_more_pads) We're done... Sending no more pads 
(on_btdemux_no_more_pads) on no more pads: src_00
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(737)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(736), ipc_data->piece(737)
(bt_demux_stream_push_loop) recovery lock (736)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=737, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (737) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 736 to 737 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (737) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (737) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [738,739] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(737)
(gst_bt_demux_send_buffering) waiting lock (737)
(gst_bt_demux_send_buffering) recovery lock (737)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:737
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:737,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 738 completed (down: 3447 kb/s, up: 100 kb/s, peers: 1, prio:7) 
 Piece 738 set bit at (92,2)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [738,740] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (737)
(gst_bt_demux_send_buffering) recovery lock (737)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 738, current:737
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(738)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(738), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 738 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(738)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(737), ipc_data->piece(738)
(bt_demux_stream_push_loop) recovery lock (737)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=738, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (738) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 737 to 738 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (738) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (738) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [739,740] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(738)
(gst_bt_demux_send_buffering) waiting lock (738)
(gst_bt_demux_send_buffering) recovery lock (738)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:738
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:738,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 739 completed (down: 3447 kb/s, up: 100 kb/s, peers: 1, prio:7) 
 Piece 739 set bit at (92,3)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [739,741] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (738)
(gst_bt_demux_send_buffering) recovery lock (738)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 739, current:738
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(739)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(739), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 739 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(739)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(738), ipc_data->piece(739)
(bt_demux_stream_push_loop) recovery lock (738)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=739, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (739) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 738 to 739 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (739) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (739) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [740,741] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(739)
(gst_bt_demux_send_buffering) waiting lock (739)
(gst_bt_demux_send_buffering) recovery lock (739)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:739
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:739,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 23 completed (down: 3447 kb/s, up: 100 kb/s, peers: 1, prio:1) 
 Piece 23 set bit at (2,7)
Piece 24 completed (down: 3720 kb/s, up: 109 kb/s, peers: 1, prio:1) 
 Piece 24 set bit at (3,0)
Piece 25 completed (down: 3006 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 25 set bit at (3,1)
Piece 26 completed (down: 3006 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 26 set bit at (3,2)
Piece 27 completed (down: 3006 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 27 set bit at (3,3)
Piece 28 completed (down: 3006 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 28 set bit at (3,4)
Piece 29 completed (down: 3006 kb/s, up: 88 kb/s, peers: 1, prio:1) 
 Piece 29 set bit at (3,5)
Piece 30 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 30 set bit at (3,6)
Piece 31 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 31 set bit at (3,7)
Piece 32 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 32 set bit at (4,0)
Piece 33 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 33 set bit at (4,1)
Piece 34 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 34 set bit at (4,2)
Piece 35 completed (down: 2901 kb/s, up: 86 kb/s, peers: 1, prio:1) 
 Piece 35 set bit at (4,3)
Piece 36 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 36 set bit at (4,4)
Piece 37 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 37 set bit at (4,5)
Piece 38 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 38 set bit at (4,6)
Piece 740 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:7) 
 Piece 740 set bit at (92,4)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [740,742] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (739)
(gst_bt_demux_send_buffering) recovery lock (739)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 740, current:739
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(740)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(740), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 740 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(740)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(739), ipc_data->piece(740)
(bt_demux_stream_push_loop) recovery lock (739)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=740, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (740) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 739 to 740 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (740) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (740) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [741,742] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(740)
(gst_bt_demux_send_buffering) waiting lock (740)
(gst_bt_demux_send_buffering) recovery lock (740)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:740
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:740,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 741 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:7) 
 Piece 741 set bit at (92,5)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [741,743] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (740)
(gst_bt_demux_send_buffering) recovery lock (740)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 741, current:740
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(741)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(741), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 741 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(741)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(740), ipc_data->piece(741)
(bt_demux_stream_push_loop) recovery lock (740)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=741, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (741) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 740 to 741 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (741) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (741) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [742,743] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(741)
(gst_bt_demux_send_buffering) waiting lock (741)
(gst_bt_demux_send_buffering) recovery lock (741)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:741
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:741,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 742 completed (down: 3535 kb/s, up: 105 kb/s, peers: 1, prio:7) 
 Piece 742 set bit at (92,6)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [742,744] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (741)
(gst_bt_demux_send_buffering) recovery lock (741)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 742, current:741
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(742)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(742), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 742 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(742)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(741), ipc_data->piece(742)
(bt_demux_stream_push_loop) recovery lock (741)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=742, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (742) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 741 to 742 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (742) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (742) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [743,744] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(742)
(gst_bt_demux_send_buffering) waiting lock (742)
(gst_bt_demux_send_buffering) recovery lock (742)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:742
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:742,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 743 completed (down: 4129 kb/s, up: 122 kb/s, peers: 1, prio:7) 
 Piece 743 set bit at (92,7)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [743,745] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (742)
(gst_bt_demux_send_buffering) recovery lock (742)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 743, current:742
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(743)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(743), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 743 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(743)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(742), ipc_data->piece(743)
(bt_demux_stream_push_loop) recovery lock (742)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=743, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (743) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 742 to 743 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (743) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (743) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [744,745] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(743)
(gst_bt_demux_send_buffering) waiting lock (743)
(gst_bt_demux_send_buffering) recovery lock (743)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:743
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:743,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 744 completed (down: 4129 kb/s, up: 122 kb/s, peers: 1, prio:7) 
 Piece 744 set bit at (93,0)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [744,746] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (743)
(gst_bt_demux_send_buffering) recovery lock (743)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 744, current:743
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(744)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(744), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 744 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(744)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(743), ipc_data->piece(744)
(bt_demux_stream_push_loop) recovery lock (743)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=744, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (744) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 743 to 744 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (744) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (744) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [745,746] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(744)
(gst_bt_demux_send_buffering) waiting lock (744)
(gst_bt_demux_send_buffering) recovery lock (744)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:744
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:744,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 745 completed (down: 4129 kb/s, up: 122 kb/s, peers: 1, prio:7) 
 Piece 745 set bit at (93,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [745,747] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (744)
(gst_bt_demux_send_buffering) recovery lock (744)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 745, current:744
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(745)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(745), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 745 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(745)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(744), ipc_data->piece(745)
(bt_demux_stream_push_loop) recovery lock (744)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=745, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (745) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 744 to 745 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (745) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (745) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [746,747] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(745)
(gst_bt_demux_send_buffering) waiting lock (745)
(gst_bt_demux_send_buffering) recovery lock (745)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:745
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:745,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 746 completed (down: 3210 kb/s, up: 95 kb/s, peers: 1, prio:7) 
 Piece 746 set bit at (93,2)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [746,748] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (745)
(gst_bt_demux_send_buffering) recovery lock (745)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 746, current:745
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(746)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(746), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 746 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(746)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(745), ipc_data->piece(746)
(bt_demux_stream_push_loop) recovery lock (745)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=746, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (746) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 745 to 746 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (746) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (746) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [747,748] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(746)
(gst_bt_demux_send_buffering) waiting lock (746)
(gst_bt_demux_send_buffering) recovery lock (746)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:746
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:746,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 747 completed (down: 3210 kb/s, up: 95 kb/s, peers: 1, prio:7) 
 Piece 747 set bit at (93,3)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [747,749] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (746)
(gst_bt_demux_send_buffering) recovery lock (746)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 747, current:746
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(747)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(747), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 747 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(747)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(746), ipc_data->piece(747)
(bt_demux_stream_push_loop) recovery lock (746)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=747, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (747) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 746 to 747 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (747) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (747) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [748,749] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(747)
(gst_bt_demux_send_buffering) waiting lock (747)
(gst_bt_demux_send_buffering) recovery lock (747)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:747
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:747,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 39 completed (down: 3210 kb/s, up: 95 kb/s, peers: 1, prio:1) 
 Piece 39 set bit at (4,7)
Piece 40 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 40 set bit at (5,0)
Piece 41 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 41 set bit at (5,1)
Piece 42 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 42 set bit at (5,2)
Piece 43 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 43 set bit at (5,3)
Piece 44 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 44 set bit at (5,4)
Piece 45 completed (down: 1682 kb/s, up: 49 kb/s, peers: 1, prio:1) 
 Piece 45 set bit at (5,5)
Piece 47 completed (down: 2462 kb/s, up: 70 kb/s, peers: 1, prio:1) 
 Piece 47 set bit at (5,7)
Piece 46 completed (down: 2462 kb/s, up: 70 kb/s, peers: 1, prio:1) 
 Piece 46 set bit at (5,6)
Piece 48 completed (down: 2462 kb/s, up: 70 kb/s, peers: 1, prio:1) 
 Piece 48 set bit at (6,0)
Piece 49 completed (down: 2462 kb/s, up: 70 kb/s, peers: 1, prio:1) 
 Piece 49 set bit at (6,1)
Piece 50 completed (down: 2462 kb/s, up: 70 kb/s, peers: 1, prio:1) 
 Piece 50 set bit at (6,2)
[Thread 0x7fff1e2f26c0 (LWP 26041) exited]
Piece 51 completed (down: 3047 kb/s, up: 89 kb/s, peers: 1, prio:1) 
 Piece 51 set bit at (6,3)
Piece 52 completed (down: 3047 kb/s, up: 89 kb/s, peers: 1, prio:1) 
 Piece 52 set bit at (6,4)
Piece 53 completed (down: 3047 kb/s, up: 89 kb/s, peers: 1, prio:1) 
 Piece 53 set bit at (6,5)
Piece 54 completed (down: 3047 kb/s, up: 89 kb/s, peers: 1, prio:1) 
 Piece 54 set bit at (6,6)
Piece 748 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 748 set bit at (93,4)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [748,750] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (747)
(gst_bt_demux_send_buffering) recovery lock (747)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 748, current:747
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(748)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(748), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 748 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(748)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(747), ipc_data->piece(748)
(bt_demux_stream_push_loop) recovery lock (747)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=748, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (748) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 747 to 748 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (748) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (748) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [749,750] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(748)
(gst_bt_demux_send_buffering) waiting lock (748)
(gst_bt_demux_send_buffering) recovery lock (748)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:748
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:748,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 749 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 749 set bit at (93,5)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [749,751] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (748)
(gst_bt_demux_send_buffering) recovery lock (748)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 749, current:748
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(749)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(749), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 749 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(749)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(748), ipc_data->piece(749)
(bt_demux_stream_push_loop) recovery lock (748)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=749, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (749) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 748 to 749 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (749) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (749) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [750,751] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(749)
(gst_bt_demux_send_buffering) waiting lock (749)
(gst_bt_demux_send_buffering) recovery lock (749)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:749
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:749,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 750 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 750 set bit at (93,6)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [750,752] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (749)
(gst_bt_demux_send_buffering) recovery lock (749)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 750, current:749
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(750)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(750), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 750 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(750)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(749), ipc_data->piece(750)
(bt_demux_stream_push_loop) recovery lock (749)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=750, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (750) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 749 to 750 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (750) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (750) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [751,752] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(750)
(gst_bt_demux_send_buffering) waiting lock (750)
(gst_bt_demux_send_buffering) recovery lock (750)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:750
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:750,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 751 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 751 set bit at (93,7)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [751,753] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (750)
(gst_bt_demux_send_buffering) recovery lock (750)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 751, current:750
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(751)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(751), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 751 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(751)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(750), ipc_data->piece(751)
(bt_demux_stream_push_loop) recovery lock (750)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=751, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (751) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 750 to 751 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (751) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (751) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [752,753] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(751)
(gst_bt_demux_send_buffering) waiting lock (751)
(gst_bt_demux_send_buffering) recovery lock (751)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:751
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:751,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 752 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 752 set bit at (94,0)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [752,754] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (751)
(gst_bt_demux_send_buffering) recovery lock (751)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 752, current:751
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(752)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(752), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 752 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(752)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(751), ipc_data->piece(752)
(bt_demux_stream_push_loop) recovery lock (751)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=752, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (752) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 751 to 752 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (752) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (752) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [753,754] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(752)
(gst_bt_demux_send_buffering) waiting lock (752)
(gst_bt_demux_send_buffering) recovery lock (752)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:752
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:752,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 753 completed (down: 3309 kb/s, up: 97 kb/s, peers: 1, prio:7) 
 Piece 753 set bit at (94,1)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [753,755] buffered:1, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (752)
(gst_bt_demux_send_buffering) recovery lock (752)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 753, current:752
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(753)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(753), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 753 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(753)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(752), ipc_data->piece(753)
(bt_demux_stream_push_loop) recovery lock (752)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=753, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (753) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 752 to 753 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (753) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (753) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [754,755] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(753)
(gst_bt_demux_send_buffering) waiting lock (753)
(gst_bt_demux_send_buffering) recovery lock (753)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:753
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:753,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 754 completed (down: 3274 kb/s, up: 96 kb/s, peers: 1, prio:7) 
 Piece 754 set bit at (94,2)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [754,756] buffered:0, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 0 (0/1) 
(gst_bt_demux_send_buffering) waiting lock (753)
(gst_bt_demux_send_buffering) recovery lock (753)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:753
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
Piece 755 completed (down: 3274 kb/s, up: 96 kb/s, peers: 1, prio:1) 
 Piece 755 set bit at (94,3)
(gst_bt_demux_handle_alert) in piece_finished_alert, updating buffering progress information 
(gst_bt_demux_stream_update_buffering) between [754,756] buffered:2, buffering:1
(gst_bt_demux_stream_update_buffering) Buffering level 100 (1/1) 
(gst_bt_demux_send_buffering) waiting lock (753)
(gst_bt_demux_send_buffering) recovery lock (753)
(gst_bt_demux_send_buffering) Buffering finished, soon call read_piece() on piece 754, current:753
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(754)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(754), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 754 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(754)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(753), ipc_data->piece(754)
(bt_demux_stream_push_loop) recovery lock (753)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=754, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (754) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 753 to 754 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (754) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (754) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Luckily we have next piece 755, call read_piece() on it, current:754
(bt_demux_stream_push_loop) unlock cur:(754)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:754,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
(bt_demux_handle_alert) BEGIN in read_piece_alert, piece idx:(755)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(755), size=1048576 
(bt_demux_handle_alert) stream-idx(0) in read_piece_alert, Start the pad task(bt_demux_stream_push_loop) 755 
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) EXIT in read_piece_alert, piece idx:(755)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(754), ipc_data->piece(755)
(bt_demux_stream_push_loop) recovery lock (754)
(gst_bt_demux_buffer_new) thiz->start_piece=729, piece=755, this buffer actual size:1048576 
(bt_demux_stream_push_loop) Received piece (755) of size 1048576 and actual size 1048576 on file 0 
(bt_demux_stream_push_loop) Modifying thiz->current_piece from 754 to 755 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 1048576, file: 0, cur piece: (755) 
(bt_demux_stream_push_loop)!!Failed Pushing buffer,actual size: 1048576, file: 0, piece: (755) ret=-2
(bt_demux_stream_push_loop) it is flushing  
(bt_demux_stream_push_loop) Unlickily We dont hold the next piece, buffering between [756,757] 
(bt_demux_stream_push_loop) clearing historical cur_buffering_flags for new push
(bt_demux_stream_push_loop) unlock cur:(755)
(gst_bt_demux_send_buffering) waiting lock (755)
(gst_bt_demux_send_buffering) recovery lock (755)
(gst_bt_demux_send_buffering) Buffering unfinished, post buffering level. current:755
(gst_bt_demux_send_buffering) waiting lock (0)
(gst_bt_demux_send_buffering) recovery lock (0)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_00 [start piece idx:729, end piece idx:905],current_piece:755,pad task state 0 
(bt_demux_stream_push_loop) decodebin ghost sink pad is ok to have target
(bt_demux_stream_push_loop) have_type emitted, proceeding 
Piece 55 completed (down: 3274 kb/s, up: 96 kb/s, peers: 1, prio:1) 
 Piece 55 set bit at (6,7)
Piece 56 completed (down: 3274 kb/s, up: 96 kb/s, peers: 1, prio:1) 
 Piece 56 set bit at (7,0)
Piece 57 completed (down: 3274 kb/s, up: 96 kb/s, peers: 1, prio:1) 
 Piece 57 set bit at (7,1)
Piece 58 completed (down: 3581 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 58 set bit at (7,2)
Piece 59 completed (down: 3581 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 59 set bit at (7,3)
Piece 60 completed (down: 3581 kb/s, up: 105 kb/s, peers: 1, prio:1) 
 Piece 60 set bit at (7,4)
^C
Thread 1 "totem" received signal SIGINT, Interrupt.
futex_wait (private=0, expected=2, futex_word=0x7fff68000b70) at ../sysdeps/nptl/futex-internal.h:146
warning: 146	../sysdeps/nptl/futex-internal.h: No such file or directory
(gdb) q
A debugging session is active.

	Inferior 1 [process 25978] will be killed.

Quit anyway? (y or n) y
pal@pal-desktop79:/media/pal/E/GnomeApp/totem-gstbt/install/bin$ 
