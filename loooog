pal@pal-desktop79:/media/pal/E/GnomeApp/totem-gstbt/install/bin$ gdb ./totem 

GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./totem...
(gdb) 
(gdb) r
Starting program: /media/pal/E/GnomeApp/totem-gstbt/install/bin/totem 

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) 
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgobject-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libglib-2.0.so.0
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgdk-3.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libpeas-1.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libgmodule-2.0.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libbrotlidec.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libbrotlicommon.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcap.so.2
(totem_object_class_init) 
(totem-object/totem_object_init) 
[New Thread 0x7ffff52006c0 (LWP 4523)]
[New Thread 0x7fffefe006c0 (LWP 4524)]
[New Thread 0x7fffef4006c0 (LWP 4525)]
[New Thread 0x7fffeea006c0 (LWP 4526)]
[Detaching after fork from child process 4527]
GST::gst_soup_http_src_uri_handler_init 
(gst_bt_demux_class_init) 
(totem_object_app_handle_local_options) 
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/gio/modules/libgvfsdbus.so
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/gvfs/libgvfscommon.so
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcanberra.so.0
NOT g_application_get_is_remote 
(totem-object/totem_object_app_activate)
(totem_player_toolbar_class_init) 
bacon_video_widget_class_init 
(bacon_video_widget_init) 
(file_src_init)
(gst_bt_demux_class_init) 
(bt_demux_init) 
(gst_bt_demux_init) add sink pad to element
[New Thread 0x7fffed6006c0 (LWP 4534)]
[New Thread 0x7fffecc006c0 (LWP 4535)]
GTK-GLSINK:: gst_gtk_gl_sink_init 
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libnss_mdns4_minimal.so.2
GL-SINKBIN::gst_gl_sink_bin_init 
GL-SINKBIN::gst_gl_sink_bin_set_sink 
[New Thread 0x7fffe7e006c0 (LWP 4536)]
(bacon_video_widget_can_direct_seek 
bacon_time_label_class_init 
[New Thread 0x7fffe4a006c0 (LWP 4537)]
(totem_setup_window) 
(totem-object/video_widget_create) 
(bacon_video_widget_realize) 
(bacon_video_widget_realize) gtk_widget_get_window
(bacon_video_widget_realize) gtk_widget_get_toplevel ok
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtinfo.so.6
[New Thread 0x7fffd98006c0 (LWP 4538)]
[New Thread 0x7fffd8e006c0 (LWP 4539)]
[New Thread 0x7fffcfe006c0 (LWP 4540)]
[New Thread 0x7fffcf4006c0 (LWP 4541)]
[New Thread 0x7fffcea006c0 (LWP 4542)]
[New Thread 0x7fffce0006c0 (LWP 4543)]
(totem_callback_connect) 
(bacon_video_widget_get_volume)
[New Thread 0x7fffcd6006c0 (LWP 4544)]
[New Thread 0x7fffccc006c0 (LWP 4545)]
[New Thread 0x7fffb7e006c0 (LWP 4547)]
(totem_object_get_video_widget) 
(bvw/set_audio_filter) caps is NULL 
IN totem_plugins_engine_get_default ,path[]=/home/pal/.local/share/totem/plugins
IN totem_plugins_engine_get_default ,path[]=/media/pal/E/GnomeApp/totem-gstbt/install/lib/x86_64-linux-gnu/totem/plugins
plugin loading:TOTEM_TYPE_VARIABLE_RATE_PLUGIN
plugin loading:TOTEM_TYPE_MOVIE_PROPERTIES_PLUGIN
In totem-movie-properties.c impl_activeate 
plugin loading:TOTEM_TYPE_SCREENSAVER_PLUGIN
(totem_object_get_video_widget) 
plugin loading:TOTEM_TYPE_SCREENSHOT_PLUGIN
(totem_object_get_video_widget) 
plugin loading:TOTEM_TYPE_ROTATION_PLUGIN
(totem_object_get_video_widget) 
plugin loading:TOTEM_TYPE_OPEN_DIRECTORY_PLUGIN
OPEN-DIRECTORY: impl_activate
 (totem_object_plugins_init) 
(totem_object_app_activate) set fileidx as -1 to start pipeline but not playing yet 
totem_object_set_fileidx, file_idx=-1 
(bacon_video_widget_open) initial case: fileidx is -1 ,progressively set state to READY and then PAUSED
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libpulse.so.0
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon-16.1.so
[New Thread 0x7fffb74006c0 (LWP 4549)]
[Thread 0x7fffb74006c0 (LWP 4549) exited]
[New Thread 0x7fffb74006c0 (LWP 4550)]
[New Thread 0x7fffb6a006c0 (LWP 4551)]
[New Thread 0x7fffb60006c0 (LWP 4552)]
[New Thread 0x7fffb56006c0 (LWP 4553)]
(bt_demux_change_state) FIRST GST_STATE_CHANGE_READY_TO_PAUSED (1)
(bt_demux_task_setup) setting up task......
[New Thread 0x7fffb4c006c0 (LWP 4554)]
(base_src_perform_seek) 
[New Thread 0x7fff9fe006c0 (LWP 4555)]
(bt_demux_sink_event) 
(bt_demux_sink_event) Not EOS, return
(gst_file_src_fill) offset=0, length=4096
(gst_file_src_fill) Reading 4096 bytes at offset  0x0 
(bvw_bus_message_cb) bvw-pipeline changed state from NULL to READY
[New Thread 0x7fff9f4006c0 (LWP 4556)]
(bt_demux_sink_event) 
(bt_demux_sink_event) Not EOS, return
Received buffer 
(gst_file_src_fill) offset=4096, length=1108
(gst_file_src_fill) Reading 1108 bytes at offset  0x1000 
Received buffer 
(bt_demux_sink_event) 
(gst_bt_demux_sink_event) Received EOS in gst_bt_demux_sink_event()
(gst_bt_demux_sink_event) buflen is 5204 
(gst_bt_demux_sink_event) adapter available len is 5204 
(gst_bt_demux_sink_event) atp.save_path = /home/pal/Documents 
(gst_bt_demux_sink_event) libtorrent async_add_torrent called 
Got add_torrent_alert 
Start download, num files: 2, num pieces: 248, piece length: 32768 
(gst_bt_demux_handle_alert) finished_pieces piece_byte count=31
gst_bt_demux_stream_class_init 
gst_bt_demux_stream_init 
(gst_bt_demux_handle_alert) create src pad src_00 (aka.BtDemuxStream) 
[New Thread 0x7fff9ea006c0 (LWP 4557)]
(bt_demux_handle_alert) Adding stream src_00 for file Japan/ForBiggerBlazes.mp4 at fileidx 0, start_piece:0, start_ofset:0,end_piece:76,end_ofset:7757 [0,2498125]
gst_bt_demux_stream_init 
(gst_bt_demux_handle_alert) create src pad src_01 (aka.BtDemuxStream) 
(bt_demux_handle_alert) Adding stream src_01 for file Japan/wwa.mp4 at fileidx 1, start_piece:76, start_ofset:7757,end_piece:247,end_ofset:17639 [2498125,8111335]
(bvw_handle_application_message) entering 
(bvw_handle_application_message) src_name is:btdemux,type_name is:got-piece-block-info 
(totem_got_piece_block_info) entering 
(free_piece_block_info_sd) called 
[Thread 0x7fffcd6006c0 (LWP 4544) exited]
[New Thread 0x7fffcd6006c0 (LWP 4558)]
Piece 0 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 1 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 2 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 3 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 4 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 5 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 6 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 7 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 8 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 9 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 10 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 11 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 12 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 13 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 14 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 15 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 16 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 17 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 18 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 19 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 20 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 21 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 22 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 23 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 24 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 25 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 26 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 27 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 28 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 29 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 30 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 31 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 32 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 33 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 34 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 35 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 36 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 37 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 38 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 39 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 40 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 41 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 42 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 43 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 44 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 45 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 46 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 47 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 48 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 49 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 50 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 51 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 52 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 53 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 54 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 55 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 56 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 57 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 58 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 59 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 60 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 61 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 62 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 63 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 64 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 65 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 66 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 67 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 68 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 69 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 70 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 71 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 72 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 73 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 74 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 75 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 76 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 77 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 78 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 79 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 80 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 81 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 82 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 83 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 84 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 85 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 86 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 87 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 88 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 89 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 90 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 91 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 92 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 93 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 94 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 95 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 96 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 97 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 98 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 99 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 100 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 101 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 102 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 103 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 104 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 105 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 106 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 107 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 108 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 109 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 110 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 111 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 112 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 113 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 114 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 115 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 116 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 117 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 118 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 119 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 120 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 121 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 122 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 123 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 124 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 125 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 126 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 127 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 128 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 129 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 130 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 131 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 132 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 133 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 134 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 135 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 136 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 137 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 138 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 139 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 140 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 141 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 142 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 143 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 144 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 145 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 146 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 147 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 148 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 149 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 150 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 151 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 152 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 153 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 154 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 155 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 156 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 157 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 158 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 159 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 160 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 161 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 162 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 163 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 164 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 165 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 166 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 167 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 168 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 169 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 170 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 171 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 172 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 173 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 174 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 175 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 176 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 177 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 178 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 179 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 180 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 181 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 182 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 183 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 184 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 185 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 186 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 187 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 188 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 189 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 190 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 191 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 192 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 193 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 194 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 195 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 196 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 197 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 198 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 199 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 200 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 201 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 202 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 203 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 204 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 205 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 206 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 207 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 208 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 209 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 210 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 211 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 212 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 213 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 214 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 215 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 216 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 217 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 218 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 219 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 220 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 221 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 222 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 223 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 224 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 225 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 226 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 227 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 228 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 229 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 230 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 231 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 232 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 233 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 234 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 235 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 236 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 237 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 238 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 239 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 240 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 241 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 242 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 243 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 244 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 245 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 246 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Piece 247 completed (down: 0 kb/s, up: 0 kb/s, peers: 0) 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
(gst_bt_demux_handle_alert) waiting lock 
(gst_bt_demux_handle_alert) recovery lock 
Got torrent_checked_alert
(bvw_handle_application_message) entering 
(bvw_handle_application_message) src_name is:btdemux,type_name is:stop-ppi 
(bvw_handle_application_message) torrent download finished, stopping the ppi 
(bvw_downaloding_ppi_timeout) 
(gst_bt_demux_get_ppi) 0
(bvw_handle_element_message) src_name is:btdemux,type_name is:btdemux-video-info  
gst_value_array_get_size = 2 
(bvw) fname is Japan/ForBiggerBlazes.mp4
(bvw) fpath is /home/pal/Documents/Japan/ForBiggerBlazes.mp4
(btdemux-video-info) Key: 0, FileName: Japan/ForBiggerBlazes.mp4, FullPath: /home/pal/Documents/Japan/ForBiggerBlazes.mp4
(bvw) fname is Japan/wwa.mp4
(bvw) fpath is /home/pal/Documents/Japan/wwa.mp4
(btdemux-video-info) Key: 1, FileName: Japan/wwa.mp4, FullPath: /home/pal/Documents/Japan/wwa.mp4
(bacon_video_widget_retrieve_btdemux_video_info) Got it 
(totem_got_torrent_videos_info) Loop item, Fidx: 0, FileName: Japan/ForBiggerBlazes.mp4, FullPath: /home/pal/Documents/Japan/ForBiggerBlazes.mp4
(totem_playlist_add_one_row_impl) 0 Japan/ForBiggerBlazes.mp4 /home/pal/Documents/Japan/ForBiggerBlazes.mp4
(totem_playlist_add_one_row_impl) use insert_with_values 
(totem_got_torrent_videos_info) Loop item, Fidx: 1, FileName: Japan/wwa.mp4, FullPath: /home/pal/Documents/Japan/wwa.mp4
(totem_playlist_add_one_row_impl) 1 Japan/wwa.mp4 /home/pal/Documents/Japan/wwa.mp4
(totem_playlist_add_one_row_impl) use insert_with_values 
(totem_got_torrent_videos_info) probe: len of playlist is 2
(totem_object_set_current_fileidx_and_play) get current fileidx 1 from totem-playlist 
totem_object_set_fileidx_and_play, file_index=1 
totem_object_set_fileidx, file_idx=1 
(bacon_video_widget_open) set cur_video_fileidx_within_tor to 1
(btdemux/update_requested_stream) desired fileidx 1 
(btdemux/update_requested_stream) foo = 0
(btdemux/update_requested_stream) stream-idx(0) disable undesired streams(src pads)
(btdemux/update_requested_stream) stream-idx(1) gst_pad_set_active ok
(btdemux/update_requested_stream) foo = 1
(update_requested_stream) mark stream of fileidx 1 as requested 
(bt_demux_stream_activate) Activating stream 'src_01', start: (76), start_offset: 7757, end: 247, end_offset: 17639, current: (75) 
[New Thread 0x7fff9e0006c0 (LWP 4559)]
(bt_demux_stream_add_piece) Adding more pieces at 77, current: 75, max: 3 
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(0)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(0), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(0), stream->current_piece(0)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(0), stream->current_piece(75)
(bt_demux_stream_add_piece) Adding more pieces at 78, current: 75, max: 3 
(gst_bt_demux_switch_streams) Switching to stream 'src_01', reading piece 76, current: 75 
mark_popup_busy 0x555555571c80, opening file
(bt_demux_handle_alert) recovery lock 2; alert piece idx(0), stream->current_piece(75)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(76)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(76), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(76), stream->current_piece(0)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(76), stream->current_piece(75)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(76), stream->current_piece(75)
(bt_demux_handle_alert) stream-idx(1) create the pad if needed and add the pad to element (76)
(bt_demux_handle_alert) stream-idx(1) ENABLE gst_pad_set_active ok -149786019
(totem_playlist_get_current_full_path) /home/pal/Documents/Japan/wwa.mp4 
In totem_movie_properties_plugin_fileidx_opened 
(totem_object_get_video_widget) 
(on_btdemux_pad_added) btdemux src pad added: src_01
(on_btdemux_pad_added) Successfully linked btdemux src pad (src_01) to decodebin sink pad 
(on_btdemux_pad_added) gst_pad_is_active (pad) is 1 
(on_btdemux_pad_added) Stream-start event pushed on pad 'src_01'
(gst_bt_demux_buffer_new) thiz->start_piece=76, piece=76, this buffer actual size:25011 
(totem_object_play) 
(bacon_video_widget_play) 
(bacon_video_widget_play) cur_state:READY
play_starting_cb 
-unmark_popup_busy opening file
(bacon_video_widget_play) SET bvw->pipeline state to GST_STATE_PLAYING
-unmark_popup_busy paused
(totem_got_torrent_videos_info) gotta free the GList* 
(totem_got_torrent_videos_info) EMPTY 
(bt_demux_handle_alert) if(thiz->typefind) caps is video/quicktime, variant=(string)iso 
TYPEFIND:: gst_type_find_element_emit_have_type 
GST-DECODEBIN::type_found, it is video/quicktime 
[Thread 0x7fffb7e006c0 (LWP 4547) exited]
(qtdemux_init) 
(qtdemux_sink_activate) 
(qtdemux_sink_activate) activating push 
(qtdemux_handle_sink_event) GST_EVENT_STREAM_START 
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) out of while loop, available:0, neededbytes:16, ret:0 
(qtdemux_handle_sink_event) GST_EVENT_STREAM_START 
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) out of while loop, available:0, neededbytes:16, ret:0 
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(76), size=32768 
(bt_demux_handle_alert) stream-idx(1) in read_piece_alert, start the pad task(bt_demux_stream_push_loop) 76 
(bt_demux_handle_alert) unlock lock 2 ; alert piece idx(76), stream->current_piece(75)
(bt_demux_check_no_more_pads) We're done... Sending no more pads 
(on_btdemux_no_more_pads) on no more pads: src_01
(bt_demux_stream_push_loop) FIRE src_01 [start piece idx:76, end piece idx:247], pad task state 0 
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(75), ipc_data->piece(76)
(bt_demux_stream_push_loop) recovery lock (75)
(gst_bt_demux_buffer_new) thiz->start_piece=76, piece=76, this buffer actual size:25011 
(bt_demux_stream_push_loop) Received piece (76) of size 32768 and actual size 25011 on file 1 
(bt_demux_stream_push_loop) Reading next piece 77, current: 75 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=0, end_byte=5613210 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 25011, file: 1, piece: (76) 
(qtdemux_chain) Received buffer size:25011 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c000b90,neededbytes:16,available: 25011
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:0 (+ 0 bytes)
(bt_demux_stream_query) Querying GST_QUERY_SEEKING, [0,5613210]
(gst_qtdemux_check_seekability) seekable:1, start:0 stop:5613210
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [ftyp] size:32
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=32
(qtdemux_process_adapter) state:<HEADER>, demux->neededbytes:32, demux->offset:0 (+ 0 bytes)
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is ftyp
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=18446744073709551615
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset+=demux->neededbytes(32) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:32 (+ 32 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [free] size:8
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=8
(qtdemux_process_adapter) state:<HEADER>, demux->neededbytes:8, demux->offset:32 (+ 32 bytes)
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(77)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(77), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(77), stream->current_piece(0)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) waiting lock 2; alert piece idx(77), stream->current_piece(76)
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is free
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=18446744073709551615
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset+=demux->neededbytes(8) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:40 (+ 40 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [mdat] size:5558949
(next_entry_size) demux->offset is 40 
(qtdemux_process_adapter) FOURCC_mdat. no headers yet, try to get them
(qtdemux_seek_offset) Seeking to 5558989
(bt_demux_stream_event) Got Event, GST_EVENT_SEEK 
(bt_demux_stream_seek) info 76,7757 247,17639 
(bt_demux_stream_seek) moov_after_mdat, this Seek event is posted by qtdemux 
(bt_demux_stream_seek) rate:1.000000, start:5558989, stop:5613210 
(bt_demux_stream_seek) push flush_start 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_START 
(bt_demux_stream_seek) waiting lock (76)
(bt_demux_stream_seek) recovery lock (76)
(bt_demux_stream_seek) fileidx(1) start_byte_global = 2498125
(bt_demux_stream_seek) Seeking to, start:245, start_offset:28954, end:247, end_offset:17639, start_byte8057114,end_byte8111335 
(bt_demux_stream_activate) Activating stream 'src_01', start: (245), start_offset: 28954, end: 247, end_offset: 17639, current: (244) 
(bt_demux_stream_add_piece) Adding more pieces at 246, current: 244, max: 3 
(bt_demux_stream_add_piece) Adding more pieces at 247, current: 244, max: 3 
(bt_demux_stream_seek) Starting SEEK stream 'src_01', reading piece 245, current: 244 
(bt_demux_stream_seek) return FALSE to deliberately let qtdemux_seek_offset failed 
(bt_demux_stream_seek) unlock lock (76)
(qtdemux_process_adapter) seek failed/skipped : 40
(qtdemux_process_adapter) Clear data in adapter, demux->mdatoffset=40
(qtdemux_process_adapter) out of while loop, available:0, neededbytes:16, ret:0 
(bt_demux_stream_push_loop) unlock (244)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_01 [start piece idx:245, end piece idx:247], pad task state 0 
(bt_demux_handle_alert) recovery lock 2; alert piece idx(77), stream->current_piece(244)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(245)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(245), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(245), stream->current_piece(0)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) waiting lock 2; alert piece idx(245), stream->current_piece(244)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(245), stream->current_piece(244)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(245), size=32768 
(bt_demux_handle_alert) stream-idx(1) in read_piece_alert, start the pad task(bt_demux_stream_push_loop) 245 
(bt_demux_handle_alert) unlock lock 2 ; alert piece idx(245), stream->current_piece(244)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(244), ipc_data->piece(245)
(bt_demux_stream_push_loop) recovery lock (244)
(gst_bt_demux_buffer_new) thiz->start_piece=245, piece=245, this buffer actual size:3814 
(bt_demux_stream_push_loop) Received piece (245) of size 32768 and actual size 3814 on file 1 
(bt_demux_stream_push_loop) Reading next piece 246, current: 244 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=5558989, end_byte=5613210 
(bt_demux_stream_push_loop) since flush_start sent, send flush_stop then 
(qtdemux_handle_sink_event) got GST_EVENT_FLUSH_STOP 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 3814, file: 1, piece: (245) 
(qtdemux_chain) Received buffer size:3814 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c000b90,neededbytes:16,available: 3814
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:0 (+ 0 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [moov] size:54221
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=54221
(qtdemux_process_adapter) out of while loop, available:3814, neededbytes:54221, ret:0 
(bt_demux_stream_push_loop) unlock (245)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_01 [start piece idx:245, end piece idx:247], pad task state 0 
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(246)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(246), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(246), stream->current_piece(0)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) waiting lock 2; alert piece idx(246), stream->current_piece(245)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(246), stream->current_piece(245)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(246), size=32768 
(bt_demux_handle_alert) stream-idx(1) in read_piece_alert, start the pad task(bt_demux_stream_push_loop) 246 
(bt_demux_handle_alert) unlock lock 2 ; alert piece idx(246), stream->current_piece(245)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(245), ipc_data->piece(246)
(bt_demux_stream_push_loop) recovery lock (245)
(gst_bt_demux_buffer_new) thiz->start_piece=245, piece=246, this buffer actual size:32768 
(bt_demux_stream_push_loop) Received piece (246) of size 32768 and actual size 32768 on file 1 
(bt_demux_stream_push_loop) Reading next piece 247, current: 245 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 32768, file: 1, piece: (246) 
(qtdemux_chain) Received buffer size:32768 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c003550,neededbytes:54221,available: 36582
(gst_qtdemux_process_adapter) demux->state=<HEADER> 
(qtdemux_process_adapter) out of while loop, available:36582, neededbytes:54221, ret:0 
(bt_demux_stream_push_loop) unlock (246)
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_01 [start piece idx:245, end piece idx:247], pad task state 0 
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(247)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(247), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(247), stream->current_piece(0)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) waiting lock 2; alert piece idx(247), stream->current_piece(246)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(247), stream->current_piece(246)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(247), size=17639 
(bt_demux_handle_alert) stream-idx(1) in read_piece_alert, start the pad task(bt_demux_stream_push_loop) 247 
(bt_demux_handle_alert) unlock lock 2 ; alert piece idx(247), stream->current_piece(246)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(246), ipc_data->piece(247)
(bt_demux_stream_push_loop) recovery lock (246)
(gst_bt_demux_buffer_new) thiz->start_piece=245, piece=247, this buffer actual size:17639 
(bt_demux_stream_push_loop) Received piece (247) of size 17639 and actual size 17639 on file 1 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 17639, file: 1, piece: (247) 
(qtdemux_chain) Received buffer size:17639 demux offset:0
(qtdemux_chain) pushing in inbuf 0x7fff8c003700,neededbytes:54221,available: 54221
(gst_qtdemux_process_adapter) demux->state=<HEADER> 
(qtdemux_process_adapter) state:<HEADER>, demux->neededbytes:54221, demux->offset:0 (+ 0 bytes)
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is moov
(qtdemux_process_adapter) Parsing [moov] 
(qtdemux_process_adapter) demux->last_moov_offset= 0
(qtdemux_parse_moov)parsing moov atom!!! 
(qtdemux_parse_tree) we have read the complete moov node now at parse_tree 
(_create_stream), stream_id=04183bb00fcb91cce89f3c8c35a0639a3278f7eab97c2d084a7b2cd0687ca6eb/00/001 
(qtdemux_stbl_init) [stsz] stream->sample_size=0, stream->n_samples=1570 
(qtdemux_stbl_init), [stsc] stream->n_samples_per_chunk=2 
(qtdemux_stbl_init) allocating n_samples 1570, (guint)sizeof(QtDemuxSample) is 32
(qtdemux_parse_segments) created segment 0 time 0:00:00.000000000, media_start (0:00:00.066733400), media_stop (0:00:52.452733400), duration 0:00:52.386000000, timescale 2997
(_create_stream), stream_id=04183bb00fcb91cce89f3c8c35a0639a3278f7eab97c2d084a7b2cd0687ca6eb/00/002 
(qtdemux_stbl_init) [stsz] stream->sample_size=0, stream->n_samples=2257 
(qtdemux_stbl_init), [stsc] stream->n_samples_per_chunk=1371 
(qtdemux_stbl_init) allocating n_samples 2257, (guint)sizeof(QtDemuxSample) is 32
(qtdemux_parse_segments) created segment 0 time 0:00:00.000000000, media_start (99:99:99.999999999), media_stop (99:99:99.999999999), duration 0:00:00.011000000, timescale 44100
(qtdemux_parse_segments) created segment 1 time 0:00:00.011000000, media_start (0:00:00.000000000), media_stop (0:00:52.396000000), duration 0:00:52.396000000, timescale 44100
(qtdemux_prepare_streams) num: 2 
(qtdemux_parse_samples) ,stream fourcc avc1, pad (NULL), stbl_idx=-1, n=0 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad (NULL), stbl_idx=-1, n=0 ,n_spl=2257
(qtdemux_configure_stream) FOURCC_vide 
(qtdemux_add_stream) adding pad video_0 
(bt_demux_stream_query) Querying GST_QUERY_SEEKING, [5558989,5613210]
[New Thread 0x7fffb7e006c0 (LWP 4561)]
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_awb.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_kal.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_kal16.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_rms.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmu_us_slt.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libvpl.so.2
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libzvbi.so.0
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtheoraenc.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libtheoradec.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libvdpau.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_usenglish.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libflite_cmulex.so.1
warning: could not find '.gnu_debugaltlink' file for /lib/x86_64-linux-gnu/libcjson.so.1
FFMPEG,GST-AVVIDEC:: gst_ffmpegviddec_set_format
(qtdemux_handle_src_query)  latency
[New Thread 0x7fff6da006c0 (LWP 4562)]
[New Thread 0x7fff6d0006c0 (LWP 4563)]
[New Thread 0x7fff63e006c0 (LWP 4564)]
[New Thread 0x7fff634006c0 (LWP 4565)]
(qtdemux_configure_stream) FOURCC_soun 
(qtdemux_add_stream) adding pad audio_0 
[New Thread 0x7fff62a006c0 (LWP 4566)]
(bt_demux_stream_query) Querying GST_QUERY_DURATION 
(qtdemux_guess_bitrate) System bitrate=848760, Stream bitrate=720732
(gst_qtdemux_check_send_pending_segment) 
(gst_qtdemux_map_and_push_segments) 
(qtdemux_activate_segment) (video_0) activate segment 0, offset 0:00:00.000000000
(stream_segment_get_boundaries) (video_0) seg_time = 0:00:00.000000000 
(stream_segment_get_boundaries) (video_0) result is start=0:00:00.066733400,stop=0:00:52.452733400,time=0:00:00.000000000
(qtdemux_stream_update_segment) (video_0) new segment 0 from 0:00:00.066733400 to 0:00:52.452733400,time 0:00:00.000000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(qtdemux_activate_segment) (audio_0) activate segment 0, offset 0:00:00.000000000
(stream_segment_get_boundaries) (audio_0) seg_time = 0:00:00.000000000 
(stream_segment_get_boundaries) (audio_0) result is start=0:00:00.000000000,stop=0:00:00.011000000,time=0:00:00.000000000
(qtdemux_stream_update_segment) (audio_0) new segment 0 from 0:00:00.000000000 to 0:00:00.011000000,time 0:00:00.000000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(qtdemux_activate_segment) (audio_0) activate segment 1, offset 0:00:00.011000000
(stream_segment_get_boundaries) (audio_0) seg_time = 0:00:00.000000000 
(stream_segment_get_boundaries) (audio_0) result is start=0:00:00.000000000,stop=0:00:52.396000000,time=0:00:00.011000000
(qtdemux_stream_update_segment) (audio_0) new segment 1 from 0:00:00.000000000 to 0:00:52.396000000,time 0:00:00.011000000 
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:video_0 for tags
(gst_qtdemux_push_tags) Checking pad qtdemux0:audio_0 for tags
(qtdemux_process_adapter) Finished parsing the header 
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) out of while loop, available:0, neededbytes:16, ret:0 
(bt_demux_stream_push_loop) unlock (247)
(bt_demux_stream_push_loop) When got moov header after mdat , reset pushing start from first piece 
(bt_demux_stream_activate) Activating stream 'src_01', start: (76), start_offset: 7757, end: 247, end_offset: 17639, current: (75) 
(bt_demux_stream_add_piece) Adding more pieces at 77, current: 75, max: 3 
(bt_demux_stream_add_piece) Adding more pieces at 78, current: 75, max: 3 
bt_demux_stream_push_loop, END 
(bt_demux_stream_push_loop) FIRE src_01 [start piece idx:76, end piece idx:247], pad task state 0 
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(76)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(76), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(76), stream->current_piece(0)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(76), stream->current_piece(75)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(76), stream->current_piece(75)
(bt_demux_handle_alert) in read_piece_alert, piece_idx on alert(aka ipc_data->piece)=(76), size=32768 
(bt_demux_handle_alert) stream-idx(1) in read_piece_alert, start the pad task(bt_demux_stream_push_loop) 76 
(bt_demux_handle_alert) unlock lock 2 ; alert piece idx(76), stream->current_piece(75)
(bt_demux_stream_push_loop) waiting lock thiz->current_piece(75), ipc_data->piece(76)
(bt_demux_stream_push_loop) recovery lock (75)
(gst_bt_demux_buffer_new) thiz->start_piece=76, piece=76, this buffer actual size:25011 
(bt_demux_stream_push_loop) Received piece (76) of size 32768 and actual size 25011 on file 1 
(bt_demux_stream_push_loop) Reading next piece 77, current: 75 
(bt_demux_stream_push_loop) Push SEGMENT event, start_byte=0, end_byte=5613210 
(bt_demux_stream_push_loop) Pushing buffer, actual size: 25011, file: 1, piece: (76) 
(qtdemux_chain) Received buffer size:25011 demux offset:40
(qtdemux_chain) pushing in inbuf 0x7fff8c003700,neededbytes:16,available: 25011
(gst_qtdemux_process_adapter) demux->state=<INITIAL> 
(bt_demux_handle_alert) BEGIN recv read_piece_alert, piece idx:(77)
(bt_demux_handle_alert) waiting lock 2; alert piece idx(77), stream->current_piece(0)
(bt_demux_handle_alert) recovery lock 2; alert piece idx(77), stream->current_piece(0)
(gst_bt_demux_handle_alert) judge whether this read piece belongs to this stream
(bt_demux_handle_alert) waiting lock 2; alert piece idx(77), stream->current_piece(76)
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:40 (+ 54221 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [ftyp] size:32
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=32
(qtdemux_process_adapter) state:<HEADER>, demux->neededbytes:32, demux->offset:40 (+ 54221 bytes)
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is ftyp
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:40 (+ 54253 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [free] size:8
(qtdemux_process_adapter) already buffering still no moov header, set state to QTDEMUX_STATE_HEADER, set demux->neededbytes=8
(qtdemux_process_adapter) state:<HEADER>, demux->neededbytes:8, demux->offset:40 (+ 54253 bytes)
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, fourcc is free
(qtdemux_process_adapter) only go back to the mdat if there are samples to play first_mdat=40
(has_next_entry) Checking if there are samples not played yet
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->offset to demux->first_mdat(40) 
(qtdemux_process_adapter) In QTDEMUX_STATE_HEADER, set demux->neededbytes=16 and demux->state back to QTDEMUX_STATE_INITIAL 
(qtdemux_process_adapter) state:<INITIAL>, demux->neededbytes:16, demux->offset:40 (+ 54261 bytes)
(qtdemux_process_adapter) InQTDEMUX_STATE_INITIAL, Peeking found [mdat] size:5558949
(next_entry_size) demux->offset is 40 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=0, n=0 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=0, n=0 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) FOURCC_mdat.  already got moov header
(qtdemux_process_adapter) FOURCC_mdat. we have the headers, start playback, state set to QTDEMUX_STATE_MOVIE, and set neededbytes to 824
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:824, demux->offset:40 (+ 54261 bytes)
 BEGIN // in MOVIE for offset 40
(qtdemux_drop_data) dropping 8 bytes 
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:0 / offset:48 /size:816) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.000000000,byte pos=48 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.000000000, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.000000000, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 816, ofset now is 864 
(next_entry_size) demux->offset is 864 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=0, n=1 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=0, n=0 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:20, demux->offset:864 (+ 55085 bytes)
 BEGIN // in MOVIE for offset 864
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:1 / offset:864 /size:20) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.033366700,byte pos=864 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.033366700, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.033366700, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 20, ofset now is 884 
(next_entry_size) demux->offset is 884 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=1, n=2 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=0, n=0 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:19, demux->offset:884 (+ 55105 bytes)
 BEGIN // in MOVIE for offset 884
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:2 / offset:884 /size:19) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.066733400,byte pos=884 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.066733400, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.066733400, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 19, ofset now is 903 
(next_entry_size) demux->offset is 903 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=2, n=3 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=0, n=0 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:371, demux->offset:903 (+ 55124 bytes)
 BEGIN // in MOVIE for offset 903
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:3 / offset:1274 /size:19) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:0 / offset:903 /size:371) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.000000000,byte pos=903 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.000000000, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.000000000, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 371, ofset now is 1274 
(next_entry_size) demux->offset is 1274 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=3, n=3 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=0, n=1 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:19, demux->offset:1274 (+ 55495 bytes)
 BEGIN // in MOVIE for offset 1274
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:3 / offset:1274 /size:19) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.100100100,byte pos=1274 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.100100100, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.100100100, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 19, ofset now is 1293 
(next_entry_size) demux->offset is 1293 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=3, n=4 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=1, n=1 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:372, demux->offset:1293 (+ 55514 bytes)
 BEGIN // in MOVIE for offset 1293
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:4 / offset:2036 /size:19) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:1 / offset:1293 /size:372) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.023219954,byte pos=1293 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.023219954, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.023219954, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 372, ofset now is 1665 
(next_entry_size) demux->offset is 1665 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=4, n=4 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=1, n=2 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:371, demux->offset:1665 (+ 55886 bytes)
 BEGIN // in MOVIE for offset 1665
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:4 / offset:2036 /size:19) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:2 / offset:1665 /size:371) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.046439909,byte pos=1665 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.046439909, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.046439909, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 371, ofset now is 2036 
(next_entry_size) demux->offset is 2036 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=4, n=4 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=2, n=3 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:19, demux->offset:2036 (+ 56257 bytes)
 BEGIN // in MOVIE for offset 2036
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:4 / offset:2036 /size:19) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.133466800,byte pos=2036 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.133466800, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.133466800, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 19, ofset now is 2055 
(next_entry_size) demux->offset is 2055 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=4, n=5 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=3, n=3 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:372, demux->offset:2055 (+ 56276 bytes)
 BEGIN // in MOVIE for offset 2055
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:5 / offset:2427 /size:25) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:3 / offset:2055 /size:372) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.069659863,byte pos=2055 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.069659863, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.069659863, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 372, ofset now is 2427 
(next_entry_size) demux->offset is 2427 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=5, n=5 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=3, n=4 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:25, demux->offset:2427 (+ 56648 bytes)
 BEGIN // in MOVIE for offset 2427
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:5 / offset:2427 /size:25) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.166833500,byte pos=2427 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.166833500, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.166833500, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 25, ofset now is 2452 
(next_entry_size) demux->offset is 2452 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=5, n=6 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=4, n=4 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:371, demux->offset:2452 (+ 56673 bytes)
 BEGIN // in MOVIE for offset 2452
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:6 / offset:3195 /size:20) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:4 / offset:2452 /size:371) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.092879818,byte pos=2452 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.092879818, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.092879818, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 371, ofset now is 2823 
(next_entry_size) demux->offset is 2823 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=6, n=6 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=4, n=5 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:372, demux->offset:2823 (+ 57044 bytes)
 BEGIN // in MOVIE for offset 2823
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:6 / offset:3195 /size:20) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:5 / offset:2823 /size:372) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.116099773,byte pos=2823 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.116099773, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.116099773, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 372, ofset now is 3195 
(next_entry_size) demux->offset is 3195 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=6, n=6 ,n_spl=1570
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=5, n=6 ,n_spl=2257
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:20, demux->offset:3195 (+ 57416 bytes)
 BEGIN // in MOVIE for offset 3195
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:6 / offset:3195 /size:20) 
(qtdemux_decorate_and_push_buffer) (video_0) 0:00:00.200200200,byte pos=3195 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.200200200, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.200200200, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (video_0) 
(qtdemux_push_buffer) (video_0) Pushing buffer on pad video_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
In QTDEMUX_STATE_MOVIE, increasing offset by 20, ofset now is 3215 
(next_entry_size) demux->offset is 3215 
(qtdemux_parse_samples) ,stream fourcc avc1, pad video_0, stbl_idx=6, n=7 ,n_spl=1570
(qtdemux_parse_samples) ,stream fourcc mp4a, pad audio_0, stbl_idx=6, n=6 ,n_spl=2257
(qtdemux_parse_samples) this sample has already been parsed 
(qtdemux_process_adapter) state:<MOVIE>, demux->neededbytes:371, demux->offset:3215 (+ 57436 bytes)
 BEGIN // in MOVIE for offset 3215
(gst_qtdemux_check_send_pending_segment) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 1 (sample_index:7 / offset:3586 /size:19) 
In QTDEMUX_SATTE_MOVIE, Checking track-id 2 (sample_index:6 / offset:3215 /size:371) 
(qtdemux_decorate_and_push_buffer) (audio_0) 0:00:00.139319727,byte pos=3215 
(qtdemux_sync_streams) num streams is 2
(qtdemux_sync_stream) (video_0) current position: 0:00:00.139319727, stream end: 0:00:52.386000000 
(qtdemux_sync_stream) (audio_0) current position: 0:00:00.139319727, stream end: 0:00:52.407000000 
(qtdemux_split_and_push_buffer) (audio_0) 
(qtdemux_push_buffer) (audio_0) Pushing buffer on pad audio_0
(qtdemux_push_buffer) gst_pad_push(stream->pad, buf) 
(bvw/on_pad_added for decodebin) :src_0
decodebin's Video pad detected.
(bvw_stream_changed_cb) 
(bvw_update_stream_info) 
(on_got_metadata_event) 
In totem_movie_properties_plugin_metadata_updated 
(totem_object_get_video_widget) 
(qtdemux_handle_src_query)  duration
(bt_demux_stream_query) Querying GST_QUERY_DURATION 

Thread 1 "totem" received signal SIGSEGV, Segmentation fault.
0x00007ffff776530e in gtk_widget_get_window ()
   from /lib/x86_64-linux-gnu/libgtk-3.so.0
(gdb) Quit
(gdb) bt
#0  0x00007ffff776530e in gtk_widget_get_window () at /lib/x86_64-linux-gnu/libgtk-3.so.0
#1  0x00007ffff7fa25db in update_cursor (bvw=0x5555557f5dc0) at ../src/backend/bacon-video-widget.c:420
#2  update_cursor (bvw=0x5555557f5dc0) at ../src/backend/bacon-video-widget.c:413
#3  0x00007ffff7f9808a in set_controls_visibility
    (totem=totem@entry=0x555555571c80, visible=visible@entry=0, animate=animate@entry=1) at ../src/totem-object.c:1832
#4  0x00007ffff7f98184 in hide_popup_timeout_cb (totem=0x555555571c80) at ../src/totem-object.c:990
#5  0x00007ffff7e19522 in ??? () at /lib/x86_64-linux-gnu/libglib-2.0.so.0
#6  0x00007ffff7e1848e in ??? () at /lib/x86_64-linux-gnu/libglib-2.0.so.0
#7  0x00007ffff7e77717 in ??? () at /lib/x86_64-linux-gnu/libglib-2.0.so.0
#8  0x00007ffff7e17a53 in g_main_context_iteration () at /lib/x86_64-linux-gnu/libglib-2.0.so.0
#9  0x00007ffff7cd288d in g_application_run () at /lib/x86_64-linux-gnu/libgio-2.0.so.0
#10 0x000055555555631f in main (argc=1, argv=0x7fffffffdb68) at ../src/totem.c:48
(gdb) Quit
(gdb) q
A debugging session is active.

	Inferior 1 [process 4519] will be killed.

Quit anyway? (y or n) y
pal@pal-desktop79:/media/pal/E/GnomeApp/totem-gstbt/install/bin$ 
